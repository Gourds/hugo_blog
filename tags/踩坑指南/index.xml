<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>踩坑指南 on My New Hugo Site</title>
    <link>http://example.org/tags/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97/</link>
    <description>Recent content in 踩坑指南 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Apr 2018 17:52:00 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fluentd使用中遇到的丢数据问题</title>
      <link>http://example.org/post/fluentd%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%A2%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 11 Apr 2018 17:52:00 +0000</pubDate>
      
      <guid>http://example.org/post/fluentd%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%A2%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;目前遇到的问题主要有3个：两个关于buffer，一个关于connection。下面具体说描述下问题的详细信息及目前我采取的解决措施。先交代下我这里使用的Td-agent架构如下，PS（方便起见以下均将Td-agent简化为TD，关于TD和Fluentd的关系移步我的另一篇&lt;a href=&#34;http://arvon.top/2018/02/23/Td-agent%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/&#34;&gt;Blog&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;需要注意： 这里的缓存Buffer设置对0.14.21版本测试生效，亲测0.12.20不生效，具体可到&lt;a href=&#34;https://docs.fluentd.org/v1.0/articles/quickstart&#34;&gt;【Fluentd官网】&lt;/a&gt;获取支持。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph LR;
	  A(Td-client)--&amp;gt;F(Td-forward)
    B(Td-client)--&amp;gt;F(Td-forward)
    F--&amp;gt;E(Elasticsearch cluster)
    E--&amp;gt;K(Kibana)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>关于Fluentd使用中filter及ES插件的问题记录</title>
      <link>http://example.org/post/%E5%85%B3%E4%BA%8Efluentd%E4%BD%BF%E7%94%A8%E4%B8%ADfilter%E5%8F%8Aes%E6%8F%92%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 01 Mar 2018 11:00:00 +0000</pubDate>
      
      <guid>http://example.org/post/%E5%85%B3%E4%BA%8Efluentd%E4%BD%BF%E7%94%A8%E4%B8%ADfilter%E5%8F%8Aes%E6%8F%92%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;p&gt;**背景介绍：**线上需求将业务log数据清洗后导入kibana，原始log也要一同导入，从服务直接输出两份log肯定是不合理的，所以考虑从fluentd收集的时候进行处理，先将原始数据复制为2份，然后一份直接导入kibana，另一份通过fluentd的filter进行过滤筛选后导入kibana。其中filter遇到无法筛选nested类型数据的问题，升级版本后并更改写法后解决；升级后导致ES的index无法按原来的方法命名的问题，通过更换ES插件解决，具体见以下记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;测试环境：
OS: Amazon Linux AMI release 2015.03
Fluentd: td-agent 0.12.20&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Elasticsearch默认fields1000报错解决</title>
      <link>http://example.org/post/elasticsearch%E9%BB%98%E8%AE%A4fields1000%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Fri, 24 Nov 2017 16:11:16 +0000</pubDate>
      
      <guid>http://example.org/post/elasticsearch%E9%BB%98%E8%AE%A4fields1000%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</guid>
      <description>&lt;p&gt;**背景：**由于日志输出调整，ES出现了很多如下的报错，这个issue可以在&lt;a href=&#34;https://github.com/elastic/elasticsearch/pull/17357&#34;&gt;这个github地址找到&lt;/a&gt;,另外还有&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.0/indices-update-settings.html&#34;&gt;5.0版本关于这个问题的说明&lt;/a&gt;。
我的ES版本为：5.0.0(直接curl yourip:9200就可以看到)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is to prevent mapping explosion when dynamic keys such as UUID are used as field names. index.mapping.total_fields.limit specifies the total number of fields an index can have. An exception will be thrown when the limit is reached. The default limit is 1000. Value 0 means no limit. This setting is runtime adjustable
&lt;strong&gt;&amp;ndash; &amp;ndash; &amp;ndash; 以上摘自&lt;/strong&gt;yanjunh对于该issue的答复&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>记ARDB频繁崩溃错误</title>
      <link>http://example.org/post/%E8%AE%B0ardb%E9%A2%91%E7%B9%81%E5%B4%A9%E6%BA%83%E9%94%99%E8%AF%AF/</link>
      <pubDate>Fri, 07 Jul 2017 23:23:45 +0000</pubDate>
      
      <guid>http://example.org/post/%E8%AE%B0ardb%E9%A2%91%E7%B9%81%E5%B4%A9%E6%BA%83%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;p&gt;**背景：**在业务规模对db没有高需求的情况下使用redis存储其实是有些浪费的，毕竟内存要比磁盘贵很多。这也就是我们要把部分db从redis迁移到ardb的原因，虽然在上线之前已经做了内网测试以及线上部分db替换测试，但是并未触发ardb的这个bug，其中线上测试了30d，现在分析看来，应该是因为线上替换的这个db压力不高，用户基数小。记录一下，关于ardb可以&lt;a href=&#34;https://github.com/yinqiwen/ardb&#34;&gt;看这里&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
