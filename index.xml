<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gourds</title>
    <link>https://blog.gourds.site/</link>
    <description>Recent content on Gourds</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Aug 2021 19:34:35 +0800</lastBuildDate>
    
        <atom:link href="https://blog.gourds.site/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>书单</title>
      <link>https://blog.gourds.site/book/</link>
      <pubDate>Wed, 07 Jul 2021 19:23:57 +0800</pubDate>
      
      <guid>https://blog.gourds.site/book/</guid>
      
        <description>&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=86 src=&#34;//music.163.com/outchain/player?type=2&amp;id=169311&amp;auto=1&amp;height=66&#34;&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;阅读计划&#34;&gt;阅读计划&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;书名&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2021.06-2021.07.19&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《少有人走的路:心智成熟之旅》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;在火车上断断续续的看，准备下周读完&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.05-2021.07.08&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《三国演义》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;晚上看，已经看完了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.07.23-2021.07.27&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《这些人，那些事》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;这个搁置已久，名字很吸引我，很早以前看了一半，等上面的看完就再读一下;火车上看完了。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.05-2021.08.08&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《怪诞行为学:可预见的非理性》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;很不错，推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.07.28-2021.07.30&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《贫穷的本质》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;不是太吸引人，感觉有些啰嗦，不过确实对贫穷有了不一样的认识&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.07.19-2021.07.23&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《程序是怎么跑起来的》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;很推荐，可以轻松的窥见一些原理，对现在离硬件越来越远的程序员来说很有帮助&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.07.31-2021.08.02&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《老人与海》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;看过一遍，印象不深刻，再来，十一篇为经典而来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.07.31-2021.08.05&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《网络是怎样连接的》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;非常推荐，尤其非科班码农&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.05-2021.08.06&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《编码：隐匿在计算机软硬件背后的语言》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;不推荐，感觉啰嗦，挺无聊了，看了10章，后面抽着翻了翻，不如程序怎么跑起来那个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.09-2021.08.16&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《持续交付2.0》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;对一些行业概念更清晰了，抽空总结下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.17-2021.08.18&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《实用网络流量分析技术》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;一堆错别字，有点过时，不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.09-2021.08.12&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《呐喊》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;零零散散读过，记笔记再读下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.12-2021.08.17&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《彷徨》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;之前好像没看过&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.17-2021.08.20&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《故事新编》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;传统故事新读法，称之为故事新编，还可以罢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.18-2021.08.20&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《Docker经典实例》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;很水，不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.21-2021.08.24&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《Redis实战》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;补了一波基础知识，内容还不错，开发相关的大概过了下，后续用到的话还需要重新读&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.22-2021.08.23&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《棋王》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;这类书果然很好读，挺不错的，棋王、树王、孩子王&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.24-2021.09.03&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《好好学习》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;还可以吧，给个3分，刻意练习需要实践&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.09.03-？&lt;/td&gt;
&lt;td&gt;《平凡的世界》&lt;/td&gt;
&lt;td&gt;经典，等等来一波&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;《讲一个卖的好的故事》&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;《群书治要》&lt;/td&gt;
&lt;td&gt;枕边书ready&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;《图解性能优化》&lt;/td&gt;
&lt;td&gt;等一波电子版上架&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.24-2021.08.26&lt;/td&gt;
&lt;td&gt;&lt;del&gt;《漫画算法：小灰的算法之旅》&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;很久之前读一半搁置了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.08.27-?&lt;/td&gt;
&lt;td&gt;《流畅的python》&lt;/td&gt;
&lt;td&gt;虽然还没看完，这书很不错&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;《通向哲学的后楼梯》&lt;/td&gt;
&lt;td&gt;之前零零散散读了一半&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;《学会提问》&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;读万卷书&#34;&gt;读万卷书&lt;/h2&gt;
&lt;h3 id=&#34;运维从业书单&#34;&gt;运维从业书单&lt;/h3&gt;
&lt;h4 id=&#34;码农科普读物&#34;&gt;码农科普读物&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《网络是怎样连接的》【日】户根勤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《程序是怎么跑起来的》【日】矢泽久雄&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《图解网络硬件》【日】三轮贤一&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《图解TCP/IP》【日】竹下隆史/荒井透/苅田幸雄&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《图解HTTP》【日】上野宣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《操作系统导论》【美】雷姆兹·H.阿帕希杜塞尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《图解性能优化》【日】小田圭二&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《码农翻身：用故事给技术加点料》【中】刘欣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《计算机网络》【中】谢希人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Linux性能优化大师》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《LINUX内核:技术手册》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《深入理解LINUX内核》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《大话数据结构》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《程序员数学思维修炼》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《数学之美》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《数学思维》【英】郑乐隽&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《算法图解》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《漫画算法：小灰的算法之旅》【中】魏梦舒&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《编码：隐匿在计算机软硬件背后的语言》【美】Charles Petzold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《软技能 代码之外的生存指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《奔跑吧，程序员：从零开始打造产品、技术和团队》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《新未来简史：区块链、人工智能、大数据陷阱与数字化生活》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《程序员的英语》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;运维相关&#34;&gt;运维相关&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Git版本控制管理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Jenkins权威指南》【美】John Ferguson Smart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Vim实用技巧》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《精通正则表达式》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Shell脚本学习指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《实用网络流量分析技术》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Wireshark网络分析的艺术》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《奔跑吧Ansible》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《即学即用Docker》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Docker实践》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Docker经典实例》【美】Sebastien Goasguen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Kubernetes权威指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《构建高可用Linux服务器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Redis实战》【美】Josiah L. Carlson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Nginx高性能Web服务器详解》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《基础设施即代码：云服务器管理 》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《持续交付2.0》【中】乔梁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《可伸缩服务架构：框架与中间件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《进化：运维技术变革与实践探索》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《系统架构:复杂系统的产品设计与开发》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《SRE Google运维解密》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《DevOps实践》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Kafka技术内幕》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《云原生分布式存储基石:etcd深入解析》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;开发相关&#34;&gt;开发相关&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《代码整洁之道》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《编程风格：好代码的逻辑》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《分布式服务框架原理与实践》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《与孩子一起学编程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Head First Python》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《流畅的python》【美】Luciano Ramalho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《笨方法学Python》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Python标准库》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Python Cookbook》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Python自动化运维》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Go语言学习笔记》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Go Web编程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Go 语言程序设计》【英】Mark Summerfield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Perl语言入门》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《使用Perl实现系统管理自动化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Perl Cookbook》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Perl实例精解》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Web性能权威指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Python Web开发实战》【中】董伟明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Flask Web开发实战》【中】李辉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Flask Web开发》【美】Grinberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《Django之歌:简易》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《轻量级Django》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《移动Web前端高效开发实战》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《CSS网页设计入门》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文学&#34;&gt;文学&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《平凡的世界》【中】路遥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《围城》【中】钱钟书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《生死疲劳》【中】莫言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《晚熟的人》【中】莫言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《过于喧器的孤独》【捷克】赫拉巴尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《悲惨世界》【法】雨果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《呼啸山庄》【英】艾米莉·勃朗特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《稻草人手记》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《老人与海》【美】欧内斯特·海明威&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《牛虻》【爱尔兰】伏尼契&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《小王子》【法】圣埃克苏佩里 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《狐狸那时已是猎人》【德】赫塔·米勒&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《群书治要》【唐】魏征&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《这些人，那些事》【中】吴念真&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《三国演义》【中】罗贯中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《菜根谭》【中】洪应明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《呐喊》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《彷徨》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《故事新编》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《华盖集》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《热风》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《朝花夕拾》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《野草》【中】鲁迅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《活着》【中】余华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《许三观卖血记》【中】余华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《文城》【中】余华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《现实一种》【中】余华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《我与地坛》【中】史铁生&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《从你的全世界路过》【中】张嘉佳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《茶花女》【法】小仲马&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《岛上书店》【美】加布瑞埃拉·泽文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《圣女的救济》【日】东野佳吾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《生死场》【中】萧红&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《追忆似水年华》【法】马塞尔·普鲁斯特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《简.爱》【英】Charlotte Brontë&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《一日三秋》【中】刘震云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《一句顶一万句》【中】刘震云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《故事是这个世界的解药》【中】韩松落&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《山月记》【日】中岛敦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《人间草木》【中】汪曾祺&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《受戒》【中】汪曾祺&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《莫斯科绅士》【美】埃默·托尔斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《我的职业是小说家》【日】村上春树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《不如做只猫狗》【中】梁实秋&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《自在独行》【中】贾平凹&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《心》【日】夏目漱石&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《局外人》【法】阿尔贝·加缪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《雾都孤儿》【英】狄更斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《动物农场》【英】乔治·奥威尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《了不起的盖茨比》【美】菲茨杰拉德&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《棋王》【中】阿城&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《送你一颗子弹》【中】刘瑜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《黄金时代》【中】王小波&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《边城》【中】沈从文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《城南旧事》【中】林海音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《乡土中国》【中】费孝通&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《目光》【中】陶勇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《云边有个小卖部》【中】张嘉佳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《文青之死》【中】赖香吟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《夜晚的潜水艇》【中】陈春成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《穿透》【中】严飞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《时间的仆人》【中】蒯乐昊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《狗夫200天》【中】陈紫莲&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《俗世奇人》【中】冯骥才&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《白鹿原》【中】陈忠实&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《增广贤文》【中】郭俊峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《楚辞》【楚】屈原&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《稻草人手记》【中】三毛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《霍乱时期的爱情》【哥伦比亚】加西亚·马尔克斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《百年孤独》【哥伦比亚】加西亚·马尔克斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《你当像鸟飞往你的山》【美】塔拉·韦斯特弗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《月亮和六便士》【英】威廉· 萨默赛特·毛姆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《人类简史》【以色列】尤瓦尔·赫拉利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《生死晶黄》【中】阎连科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《变形记》【奥地利】弗朗茨·卡夫卡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《遥远的救世主》【中】豆豆(李雪)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《飞鸟集》【印】拉宾德拉纳特·泰戈尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《浮生六记》【中】沈复&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推理科幻&#34;&gt;推理|科幻&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《竹林中》【日】芥川龙之介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《S. 忒修斯之船》【美】J.J.艾布拉姆斯/【美】道格·道斯特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《洞穴奇案》【美】彼得·萨伯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《东方快车谋杀案》【英】阿加莎·克里斯蒂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《罗杰疑案》【英】阿加莎·克里斯蒂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《无人生还》【英】阿加莎·克里斯蒂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《嫌疑人X的献身》【日】东野圭吾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《白夜行》【日】东野圭吾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《恶意》【日】东野圭吾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《上帝子掷骰子么》【中】曹天元&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《三体》【中】刘慈欣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《仿生人会梦见电子羊么》【美】菲利普·迪克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《世界杂货店》【美】罗伯特·谢克里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;心理学哲学神学&#34;&gt;心理学|哲学|神学&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《通向哲学的后楼梯》【德】威廉.魏施德&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《哲学的故事》【美】威尔·杜兰特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《人生的智慧》【德】阿图尔·叔本华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《活出生命的意义》【奥】维克多·弗兰克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《忏悔录》【法】让-雅克·卢梭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《社会心理学》【美】戴维·迈尔斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《发展心理学》【美】罗伯特·费尔德曼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《何为良好生活》【中】陈嘉映&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《走出唯一真理观》【中】陈嘉映&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《说理》【中】陈嘉映&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《每个人都会死，但我总以为自己不会》【美】Thomas Cathcart/Daniel Klein&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《思考：快与慢》【美】丹尼尔·卡尼曼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《少有人走的路:心智成熟的旅程》【美】M·斯科特·派克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《少有人走的路:勇敢的面对谎言》【美】M·斯科特·派克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《少有人走的路:与心灵对话》【美】M·斯科特·派克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《少有人走的路:在焦虑的年代获得精神的成长》【美】M·斯科特·派克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《亲密关系》【美】罗兰·米勒 (Rowland S. Miller)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《爱的艺术》【美】埃里希·弗罗姆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《爱的五种能力》【中】赵永久&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《怪诞行为学:可预见的非理性》【美】丹·艾瑞里 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《人性的弱点》【美】戴尔.卡耐基&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《拖延心理学》【美】简.博克/莱诺拉.袁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《爱的博弈》【美】约翰·戈特曼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《影响力》【美】罗伯特·西奥迪尼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《乌合之众》【法】古斯塔夫·勒庞 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《自私的基因》【英】理查德.道金斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《自控力》【美】凯利·麦格尼格尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《西西弗神话》【法】阿尔贝·加缪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《禅与摩托车维修艺术》【美】罗伯特·M.波西格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《艺术的故事》【英】E·H·贡布里希&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《美的历程》【中】李泽厚&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;效率习惯&#34;&gt;效率|习惯&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《如何阅读一本书》【美】莫提默·J.艾德勒/查尔斯·范多伦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《学会提问》【美】布朗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《好好学习》【中】成甲&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《为什么精英都是时间控》【日】桦泽紫苑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《掌控习惯》【美】詹姆斯·克利尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《沟通的艺术》 【美】罗纳德·阿德勒/拉塞尔·普罗克特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《非暴力沟通》 【美】马歇尔·卢森堡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《精准表达》【日】高田贵久&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《番茄工作法图解》【瑞】Staffan Nöteberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《单核工作法图解》【瑞】Staffan Nöteberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《高效能人士的七个习惯》【美】史蒂芬·柯维&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《高效忍者》【英】格雷厄姆·阿尔科特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《第五项修炼》【美】彼得·圣吉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《怎样讲好一个故事》【美】马克•克雷默&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《讲一个卖的好的故事》【中】柒先生&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;历史传记&#34;&gt;历史|传记&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《中国通史》【中】吕思勉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《历史是个什么玩意》【中】袁腾飞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《明朝那些事》【中】石悦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《万历十五年》【美】黄仁宇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《大明王朝》【中】刘和平&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《中国近代史》【中】蒋廷黻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《中国古代文化常识》【中】王力&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《半小时漫画中国史》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《司马迁的记忆之野》【中】刘勃&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《战国歧途》【中】刘勃&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《资治通鉴》【北宋】司马光&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《中国历代政治得失》【中】钱穆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《历朝通俗演义》【中】蔡东藩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《五千年演义》【中】赵俄&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《美国陷阱》【法】弗雷德里克·皮耶鲁齐/马修·阿伦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《柏林日记》【美】威廉.夏伊勒 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《伯罗奔尼撒战争》【美】唐纳德·卡根&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《你一定爱读的极简欧洲史》【澳】约翰.赫斯特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《史蒂夫.乔布斯传》【美】沃尔特·艾萨克森&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《鞋狗》【美】菲尔·奈特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《傅雷家书》【中】傅雷/朱梅馥/傅聪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《陈寅恪语录》【中】胡文辉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《伊朗四千年》【伊朗】霍昌·纳哈万迪【法】伊夫·博马提&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;经管投资&#34;&gt;经管|投资&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《极简经济学》【中】常青&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《经济学原理》【美】N.格里高利·曼昆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《价格的发现》【美】保罗·米尔格罗姆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《小狗钱钱》【德】博多·舍费尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《贫穷的本质》【印】阿比吉特·班纳吉/【法】埃斯特·迪弗洛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《股票作手回忆录》【美】爱德温.李费佛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《聪明的投资者》【美】本杰明·格雷厄姆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《让时间陪你慢慢变富》【中】李笑来&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《指数基金投资指南》银行螺丝钉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《财务自由之路》【德】博多·舍费尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《投资中最简单的事》【中】邱国鹭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《财富自由之路I:7年赚到你的第一个1000万》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《中华文化与稻盛和夫的经营哲学》【中】章起华&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《穷查理宝典》【美】彼得·考夫曼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《记账的奥秘：会计，就这么简单》【中】田嘉林&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《每个人的经济学》【英】张夏准&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《原则》【美】瑞·达利欧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《潜规则》【中】吴思&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《血酬定律》【中】吴思&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《君主论》【意】马基雅维里&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《创业维艰》【美】本·霍洛维茨 Ben Horowitz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《马基雅维利语录》【日】盐野七生()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《权力：为什么为某些人所有》【美】杰弗瑞·菲佛()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《独裁者手册》【美】布鲁诺·德·梅斯奎塔【美】阿拉斯泰尔·史密斯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《自品牌》【美】丹·斯柯伯尔&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;兴趣读物&#34;&gt;兴趣读物&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《汽车是怎么跑起来的》【日】御堀直嗣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《考拉小巫的英语学习日记》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《民谣吉他：考级标准教程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《哈利波特与94/3站台》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《很杂很杂的杂学知识》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《曾少年》九夜茴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《光明与磊落》【中】韩寒&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《岂不怀归》【中】田丰/林凯玄&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《科学也反常：“科学咖啡馆”怪谈》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《思考的乐趣：Matrix67数学笔记》【中】顾森&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《八千万里云和月》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《浪潮之巅》【中】吴军&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《幻想故事集》【中】张柠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《这本书能让你戒烟》【英】亚伦•卡尔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《黑天鹅》【美】纳西姆·尼古拉斯·塔勒布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《灰犀牛:如何应对大概率危机》【美】米歇尔.渥克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《日本蜡烛图技术》【美】史蒂夫.尼森 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《当我跑步时我在谈些什么》【日】村上春树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《肠子的小心思》【德】朱莉娅·恩德斯 著/吉尔·恩德斯 绘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《神逻辑：不讲道理的人怎么总有理！》【美】阿里·阿莫萨维&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《火焰中的秘密》【德】延斯·森特根&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《我们如何走到今天:重塑世界的6项创新》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《塑造世界经济的50项伟大发明》【英】 蒂姆·哈福德&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《迷人的材料》【英】马克·米奥多尼克&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《万物发明指南》【加】 瑞安·诺思&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《猿猴的把戏》【意】达里奥·马埃斯特里皮埃里 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《大脑勇士》【美】丹尼尔·亚蒙(Danie &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《每天演好一个情绪稳定成年人》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《不平等社会》【美】沃尔特·沙伊德尔（Walter Scheidel）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《大脑勇士》【美】丹尼尔·亚蒙/塔娜·亚蒙&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《连接组》【美】承现峻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《从一到无穷大》【美】G·伽莫夫&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《纳闷集》【中】匡扶&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《我们为什么要睡觉》【美】Matthew Walker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《作妖》【中】张云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《孩子你慢慢来》【中】龙应台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《亲爱的安德烈》【中】龙应台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《此生未完成》【中】于娟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;a href=&#34;&#34;&gt;《微信背后的产品观》【中】张小龙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>《小灰的算法之旅》笔记</title>
      <link>https://blog.gourds.site/post/book/xiaohui_algorithm/</link>
      <pubDate>Thu, 26 Aug 2021 19:34:35 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/xiaohui_algorithm/</guid>
      
        <description>&lt;p&gt;《漫画算法：小灰的算法之旅》&lt;/p&gt;
&lt;p&gt;整体还可以，先了解计算机内存物理结构会好一点。了解算法对开阔思路很有帮助。&lt;/p&gt;
&lt;p&gt;egg：少年高斯1+50，等差数列求和，高斯算法&lt;/p&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;基本概念&lt;/h3&gt;
&lt;p&gt;算法衡量维度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间复杂度&lt;/li&gt;
&lt;li&gt;空间复杂度(space complexity)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多数情况下，时间度更重要一些，我们愿意多分配一些内存空间，也要提升程序的执行速度。&lt;/p&gt;
&lt;p&gt;算法应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算&lt;/li&gt;
&lt;li&gt;查找&lt;/li&gt;
&lt;li&gt;排序&lt;/li&gt;
&lt;li&gt;最优决策&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据结构组成方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性结构，包括数组、链表、栈、队列、哈希表&lt;/li&gt;
&lt;li&gt;树，如二叉树、二叉堆&lt;/li&gt;
&lt;li&gt;图&lt;/li&gt;
&lt;li&gt;其他由基本数据结构变形而来，用来解决某些特定问题，如跳表、哈希链表、位图等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对数：若a的x次方等于N（a&amp;gt;0，且a不等于1），那么数x叫做以a为底N的对数（logarithm）。记做x=logaN）。其中a叫做对数的底数，N叫做真数。&lt;/p&gt;
&lt;p&gt;常见复杂度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;T(n) = 3n&lt;/li&gt;
&lt;li&gt;T(n) = 5logn&lt;/li&gt;
&lt;li&gt;T(n) = 2&lt;/li&gt;
&lt;li&gt;T(n) = 0.5n2+0.5n&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;渐进时间复杂度（asymptotic time complexity）用大写O表示，也称为大O表示法&lt;/p&gt;
&lt;p&gt;原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果运行时间是常数量级，则用常数1表示&lt;/li&gt;
&lt;li&gt;只保留时间函数中的最高阶项&lt;/li&gt;
&lt;li&gt;如果最高阶存在，则省去最高阶项前面的系数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：
T(n)=2   写作 T(n)=O(1)
T(n)=3n  写作 T(n)=O(n)
T(n)=5logn 写作 T(n)=O(logn)
T(n)=0.5n2 + 0.5n 写作 T(n)=O(n2)&lt;/p&gt;
&lt;p&gt;当n足够大时，4种时间复杂度用时
&lt;code&gt;O(n) &amp;lt; O(logn) &amp;lt; O(n) &amp;lt; O(n2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;常见空间复杂度情形&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常量空间 O(1)&lt;/li&gt;
&lt;li&gt;线性空间 O(n)&lt;/li&gt;
&lt;li&gt;二维空间 O(n2)&lt;/li&gt;
&lt;li&gt;递归空间 O(n)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据结构&#34;&gt;数据结构&lt;/h3&gt;
&lt;p&gt;数组（array）是有限个相同类型的变量所组成的有序集合，数组中的每一个变量被称为元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组是最为简单、最为常用的数据结构&lt;/li&gt;
&lt;li&gt;数组在内存中是顺序存储，因此可以很好实现逻辑上的顺序表&lt;/li&gt;
&lt;li&gt;适合读操作多，写操作少的场景&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数组的优缺点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组拥有高效的随机访问能力，只要给出下标，就可以用常量时间找到对应元素。二分查找就利用了这点&lt;/li&gt;
&lt;li&gt;插入和删除元素会导致大量元素被迫移动，影响效率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链表（linked list）是一种在物理上非连续、非顺序的数据结构，由若干节点（node）所组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若说数组在内存中是顺序存储，那么链表在内存中存储方式是随机存储&lt;/li&gt;
&lt;li&gt;单向链表的每个节点包含两部分
&lt;ul&gt;
&lt;li&gt;存放数据的变量data&lt;/li&gt;
&lt;li&gt;下一个节点的指针next&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;双向链表
&lt;ul&gt;
&lt;li&gt;指向前置节点的prev指针&lt;/li&gt;
&lt;li&gt;存放数据的data&lt;/li&gt;
&lt;li&gt;next指针&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;垃圾回收机制（GC），如java，就是当内存中的变量没有外部引用指向它们，这时就会被自动回收&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以这么理解
数据分物理结构和逻辑结构，数组链表属于物理结构，而基于物理结构实现的机构如，顺序表、栈、队列、树、图属于逻辑结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;栈（stact）是一种线性数据机构，栈中的元素遵循（FILO First in last out）。最早进入的元素放的位置叫做栈底（bottom），最后进入的元素放的位置叫做栈顶（top）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;栈通常用于对”历史“的回溯，如面包屑导航，浏览页面可以轻松返回上一级或者更上一级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;队列（queue）也是一种线性数据机构，队列的出口端叫做队头（front），入口段叫做队尾（rear）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;队列常用于对”历史“的回放，如多线程中争夺公平锁的等待队列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;栈和队列都是既可以用数组实现，也可以用链表实现。&lt;/p&gt;
&lt;p&gt;双端队列，综合了栈和队列的优点，可以从队头的一段入队或出队，也可以从队尾一段入队或出队
优先队列，不遵循先入先出，而是谁优先级高谁先出队，不属于线性结构，是基于二叉堆来实现的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大优先队列，最大元素优先出队&lt;/li&gt;
&lt;li&gt;最小优先队列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;散列表也叫哈希表（hash table），这种数据结构提供了键（key）和值（value）的映射关系，时间复杂度接近于O（1）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;散列表本质上也是一个数组。通过一个”中转站“对数组下标和key进行转换，这个中转站就叫做哈希函数。&lt;/li&gt;
&lt;li&gt;哈希冲突无法避免，主要有两种解决方法
&lt;ul&gt;
&lt;li&gt;开放寻址法&lt;/li&gt;
&lt;li&gt;链表法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;散列表的读操作就是通过给定的key，在散列表中查找对应的value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;树（tree）是n个节点的有限集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当n=0时，称为空树&lt;/li&gt;
&lt;li&gt;有且仅有一个特点的称为根节点&lt;/li&gt;
&lt;li&gt;当n&amp;gt;1时，其余节点可分为m个互不相交的有限集，每个集合本身又是一个树，称为根的子树&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉树（binary tree）是树的一种特殊形式。即每个节点最多有2个子节点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;满二叉树（每个分支都是慢的）&lt;/li&gt;
&lt;li&gt;完全二叉树（最后一个节点之前的节点都齐全即可）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉树主要用于&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找&lt;/li&gt;
&lt;li&gt;维持相对顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉查找树又叫做二叉排序树（binary sort tree）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若左子树不为空，则左子树所有及诶点需小于根节点的值&lt;/li&gt;
&lt;li&gt;右子树需大于根节点的值&lt;/li&gt;
&lt;li&gt;左右子树也都是二叉查找树&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉树的自平衡方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;红黑树&lt;/li&gt;
&lt;li&gt;AVL树&lt;/li&gt;
&lt;li&gt;树堆&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉树的遍历方式（2大类4种）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;深度遍历优先
&lt;ul&gt;
&lt;li&gt;前序遍历(root&amp;ndash;&amp;gt;left&amp;ndash;&amp;gt;right)（可以用栈，利用栈的回溯特性）&lt;/li&gt;
&lt;li&gt;中序遍历(left&amp;ndash;&amp;gt;root&amp;ndash;&amp;gt;right)&lt;/li&gt;
&lt;li&gt;后序遍历(left&amp;ndash;&amp;gt;right&amp;ndash;&amp;gt;root)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;广度遍历优先
&lt;ul&gt;
&lt;li&gt;层序遍历(可以用队列）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉堆。本质上是一种完全二叉树，分为两个类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大堆&lt;/li&gt;
&lt;li&gt;最小堆&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二叉堆基于堆的自我调整，就是把一个不符合堆的完全二叉树，调整成一个堆。本质就是让所有非叶子节点依次下沉。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二叉堆虽然是完全二叉树，但存储方式并不是链式存储，而是顺序存储，即二叉堆的所有节点都存储在数组中&lt;/li&gt;
&lt;li&gt;二叉堆是实现堆排序和优先队列的基础&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;排序算法&#34;&gt;排序算法&lt;/h3&gt;
&lt;p&gt;常见排序算法（按时间复杂度分大体分3类）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间复杂度O（n2）
&lt;ul&gt;
&lt;li&gt;冒泡排序&lt;/li&gt;
&lt;li&gt;选择排序&lt;/li&gt;
&lt;li&gt;插入排序&lt;/li&gt;
&lt;li&gt;希尔排序（性能略优于O(n2),但大于O(logn))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间复杂度O(nlogn)
&lt;ul&gt;
&lt;li&gt;快速排序&lt;/li&gt;
&lt;li&gt;归并排序&lt;/li&gt;
&lt;li&gt;堆排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间复杂度线性
&lt;ul&gt;
&lt;li&gt;计数排序（利用数组下标来确认元素的正确位置）&lt;/li&gt;
&lt;li&gt;桶排序&lt;/li&gt;
&lt;li&gt;基数排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;稳定排序与不稳定排序：衡量标准为值相同的元素排序后是否保持排序前的顺序&lt;/p&gt;
&lt;p&gt;冒泡排序（bubble sort），这是一种基础的交换排序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;就是比较右边元素的大小，如果比右边大就交换位置。&lt;/li&gt;
&lt;li&gt;鸡尾酒排序可以看做是冒泡排序的升级排序法（鸡尾酒排序的比较和交换是双向的）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速排序，快速排序跟冒泡一样也属于交换排序，不同的是，冒泡排序在每一轮只是把1个元素冒泡到数列的一段，而快速排序则在每一轮挑选一个基准元素，并让其他比它大的元素移到数列一遍，比它小的元素移动到数列另一边。这种思路叫做分治法。&lt;/p&gt;
&lt;p&gt;绝大多数的递归逻辑，都可以用栈的方法来替代&lt;/p&gt;
&lt;p&gt;堆排序和快速排序都是不稳定排序&lt;/p&gt;
&lt;p&gt;计数排序局限性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不适合最大和最小值差距太大&lt;/li&gt;
&lt;li&gt;数列元素不是整数时，也不适合计数排序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;桶排序，每个桶（bucket）代表一个区间范围，里面可以有一个或多个元素&lt;/p&gt;
&lt;p&gt;常见算法
&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/20210826-suanfa.png&#34; alt=&#34;20210826-suanfa&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;qa&#34;&gt;Q&amp;amp;A&lt;/h3&gt;
&lt;p&gt;Q1: 如何判断链表有环&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;遍历，每遍历一个新节点就从头检查新节点之前的所有节点和新节点对比，相同则说明这个节点被遍历过两次&lt;/li&gt;
&lt;li&gt;Hash,先创建一个以节点ID为key的hashset集合，用来存储遍历过的节点。然后从头节点遍历，每遍历一个新节点，都用新节点和hashset集合中存储的节点比较，如果存在与之相同的接地那ID，说明有环，如果不存在就把这个新节点ID存入hashset中&lt;/li&gt;
&lt;li&gt;指针，两个指针，指针p1每次向后移动1个节点，指针p2每次向后移动2个节点，然后比较两个指针指向的节点是否相同。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q2：实现一个最小栈&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;采用额外一个栈存储最小值,（存储栈中曾经的最小值）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q3：求最大公约数&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;辗转相除法又名欧几里得算法（Euclidean algorithm）。定理：两个正整数a和b（a&amp;gt;b）,他们的最大公约数等于a除以b的余数c和b之间的最大公约数。&lt;/li&gt;
&lt;li&gt;更相减损术，出自中国古代《九章算术》。原理：两个正整数a和b（a&amp;gt;b）,他们的最大公约数等于a减去b的差值c和b之间的最大公约数。&lt;/li&gt;
&lt;li&gt;辗转相除法结合更相减损术&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q4：判断一个数是否是2的整数次幂&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;利用2进制，除了高位有1就不是&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q5：无序数组排序后的最大相邻差&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;利用计数排序思想&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Q6：用栈实现队列&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;两个栈&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;算法实际应用&#34;&gt;算法实际应用&lt;/h3&gt;
&lt;p&gt;Bitmap（位图）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要用于对大量证书做去重和查询操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LRU（Least Recently Used）是一种内存管理算法，LRU使用了哈希链表&lt;/p&gt;
&lt;p&gt;A星寻路算法（A* search algorithm）是一种用于寻找有效路径的算法。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《Redis实战》</title>
      <link>https://blog.gourds.site/post/book/redis_in_action/</link>
      <pubDate>Tue, 24 Aug 2021 14:28:19 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/redis_in_action/</guid>
      
        <description>&lt;p&gt;Reids in Action Notebook&lt;/p&gt;
&lt;p&gt;这书还不错，查漏补缺，部分开发内容只大概浏览了下，之后用到的话再详细看下具体应用。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Redis的5种数据结构。（STRING、LIST、SET、HASH、ZSET）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;存储&lt;/th&gt;
&lt;th&gt;结构的读写能力&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;STRING&lt;/td&gt;
&lt;td&gt;可以是字符串、整数或浮点数&lt;/td&gt;
&lt;td&gt;对整个字符串或者字符串的一部分执行操作； &lt;br&gt; 对整数和浮点数执行自增（increment）或自减（decrement）操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LIST&lt;/td&gt;
&lt;td&gt;一个链表，链表上的每个节点都包含了一个字符串&lt;/td&gt;
&lt;td&gt;从链表的两端推入或者弹出元素；&lt;br&gt; 根据偏移量对链表进行修剪（trim）；&lt;br&gt; 读取单个或多个元素；&lt;br&gt; 根据值查找或移除元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;包含字符串的无序收集器（unordered collection），并且被包含的每个字符串都是不同的&lt;/td&gt;
&lt;td&gt;添加、获取、移除单个元素；&lt;br&gt;检查一个元素是否存在于集合中；&lt;br&gt;计算交集、并集、差集；&lt;br&gt;从集合里面随机获得元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HASH&lt;/td&gt;
&lt;td&gt;包含键值对的无序散列表&lt;/td&gt;
&lt;td&gt;添加、获取、删除单个键值对；&lt;br&gt;获取所有键值对&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZSET&lt;/td&gt;
&lt;td&gt;字符串成员（member）与浮点数分值（score）之间的有序映射，元素的排列顺序由分值的大小决定&lt;/td&gt;
&lt;td&gt;添加、获取、删除单个元素；&lt;br&gt;根据分值范围（range）或者成员来获取元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;string命令(可以存储字节串、整数、浮点数）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;set hello world
get hello
del hello
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;extend&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;conn = redis.Redis()
conn.get(&amp;#39;key&amp;#39;)
comm.incr(&amp;#39;key&amp;#39;, 15) #+15
conn.decr(&amp;#39;key&amp;#39;, 5)  #-5
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;list命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;rpush list-key item
rpush list-key item2
lrange list-key 0 -1
lindex list-key 1
lpop list-key
lrange list-key 0 -1
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;BLPOP/BRPOP，对于阻塞弹出命令和弹出并推入命令，最常用的就是消息传递和任务队列（task queue）。&lt;/p&gt;
&lt;p&gt;set命令,set与list的不同，list可以存储相同的字符串&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sadd set-key item
sadd set-key item2
sadd set-key item3
smembers set-key
sismember set-key item
srem set-key item2
smembers set-key
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;hash命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hset hash-key sub-key1 value1
hset hash-key sub-key2 value2
hset hash-key sub-key3 value3
hgetall hash-key #返回散列包含的所有键值对
hdel hash-key sub-key2
hgetall hash-key
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hmget key-name key1 key2
hmset key-name key1 value1 key2 value2
hlen key-name #返回散列包含的键值对数量
hexists key-name key #检查给定键是否存在于散列
hkeys key-name #获取散列包含的所有键
hvals key-name #获取散列包含的所有值
hincrby key-name key increment #将键key存储的值加上整数incremenet
hincrbyfloat key-name key increment #将键key存储的值加上浮点数incremenet
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;zset命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;zadd zset-key 728 member1
zadd zset-key 982 member0
zrange zset-key 0 -1 withscores
zrangebyscore zset-key 0 800 withscores
zrem zset-key member1
zrange zset-key 0 -1 withscores
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;应用&#34;&gt;应用&lt;/h3&gt;
&lt;p&gt;一般用来登录的cookie，有两种类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;签名cookie（singed cookie）&lt;/li&gt;
&lt;li&gt;令牌cookie&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;cooked类型&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;th&gt;缺点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;签名cookie&lt;/td&gt;
&lt;td&gt;验证cookie所需的一切信息都存储在cookie里面。cookie可以包含额外的信息，并且对这些信息进行签名也很容易&lt;/td&gt;
&lt;td&gt;正确的处理签名很难。很容易忘记对数据进行签名，或者忘记验证数据的签名，从而造成安全漏洞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;令牌cookie&lt;/td&gt;
&lt;td&gt;添加信息非常容器。cookie的体积非常小，因此移动终端和速度较慢的客户端可以更快的发送请求&lt;/td&gt;
&lt;td&gt;需要在服务器端存储更多的信息。如果使用的是关系型数据库，那么存储和载入cookie的代价可能会很高。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;发布和订阅publishsubscribe&#34;&gt;发布和订阅（publish/subscribe)&lt;/h3&gt;
&lt;p&gt;一般来说，发布和订阅的特点是订阅者（listener）负责订阅频道（channel），发送者（publisher）负责向频道发送二进制字符串消息（binary string message）。每当有消息被发送给指定频道时，频道的所有订阅者都会收到消息。&lt;/p&gt;
&lt;p&gt;Reids提供的5个发布与订阅命令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;用例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SUBSCRIBE&lt;/td&gt;
&lt;td&gt;subscribe channel [channel &amp;hellip;]&lt;/td&gt;
&lt;td&gt;订阅给定的一个或多个频道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UNSUBSCRIBE&lt;/td&gt;
&lt;td&gt;unsubscribe [channel [channel &amp;hellip;]]&lt;/td&gt;
&lt;td&gt;退订给定的一个或多个频道，如果执行时没有给定任何频道，那么退订所有的频道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBLISH&lt;/td&gt;
&lt;td&gt;publish channel message&lt;/td&gt;
&lt;td&gt;向给定频道发送消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PSUBSCRIBE&lt;/td&gt;
&lt;td&gt;psubscribe pattern [pattern &amp;hellip;]&lt;/td&gt;
&lt;td&gt;订阅与给定模式相匹配的所有频道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUNSUBSCRIBE&lt;/td&gt;
&lt;td&gt;punsubscribe [pattern [pattern &amp;hellip;]]&lt;/td&gt;
&lt;td&gt;退订给定模式，如果执行时没有给定模式，MAME退订所有模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;redis事务&#34;&gt;Redis事务&lt;/h3&gt;
&lt;p&gt;Redis的基本事务（basic transaction）需要用到MULTI命令和EXEC命令，这种事务可以让一个客户端在不被其他客户端打断的情况下执行多个命令。与关系型数据库的可以在执行过程中进行回滚（rollback）的事务不同，在redis里，被multi和exec命令包围的所有命令会一个借一个的执行，直到所有命令执行完毕为止。当一个事务执行完毕后，Reids才会处理其他客户端的命令。&lt;/p&gt;
&lt;h3 id=&#34;键的过期时间&#34;&gt;键的过期时间&lt;/h3&gt;
&lt;p&gt;用于处理过期时间的redis命令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PERSIST&lt;/td&gt;
&lt;td&gt;persist key-name&lt;/td&gt;
&lt;td&gt;移除键的过期时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TTL&lt;/td&gt;
&lt;td&gt;ttl key-name&lt;/td&gt;
&lt;td&gt;查看指定键距离过期还有多少秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EXPIRE&lt;/td&gt;
&lt;td&gt;expire key-name seconds&lt;/td&gt;
&lt;td&gt;让指定键在指定的秒数之后过期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EXPOREAT&lt;/td&gt;
&lt;td&gt;expireat key-name timestamp&lt;/td&gt;
&lt;td&gt;让指定键在指定的unix时间戳过期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PTTL&lt;/td&gt;
&lt;td&gt;pttl key-name&lt;/td&gt;
&lt;td&gt;查看给定键距离过期还有多少毫秒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PEXPIRE&lt;/td&gt;
&lt;td&gt;pexpire key-name milliseconds&lt;/td&gt;
&lt;td&gt;指定毫秒后过期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PEXPIREAT&lt;/td&gt;
&lt;td&gt;pexpireat key-name timestamp-milliseconds&lt;/td&gt;
&lt;td&gt;毫秒级的unix时间戳过期&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;安全及持久化&#34;&gt;安全及持久化&lt;/h3&gt;
&lt;p&gt;持久化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;point-in-time dump（即快照snapshotting RDB）。
&lt;ul&gt;
&lt;li&gt;指定时间内有指定的操作时执行&lt;/li&gt;
&lt;li&gt;通过调用两条转储到硬盘(dump-to-disk)命令中的任意一条&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;append-only（即AOF）。
&lt;ul&gt;
&lt;li&gt;可设置从不同步、每秒一次、每个写命令一次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快照持久化选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;save 60 1000
stop-writes-on-bgsave-error no #持久化失败后是否仍然继续执行写命令
rdbcompression yes
dbfilename dump.rdb
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;创建快照的常见方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BGSAVE命令：windows平台不支持。redis会调用fork来创建一个子进程，然后子进程负责将快照写入硬盘，而父进程则继续处理命令请求&lt;/li&gt;
&lt;li&gt;SAVE命令：接到save命令的redis服务器在快照创建完毕之前将不再响应任何其他命令。save命令并不常用，通常在没有足够内存去执行bgsave命令的情况下，或者即使等待持久化操作执行完毕也无所谓的情况下才会去使用&lt;/li&gt;
&lt;li&gt;配置设置的save配置选项：如&lt;code&gt;save 60 10000&lt;/code&gt;，表示从redis最近一次创建快照之后开始算起，当”60秒之内有10000次写入“这个条件被满足时，redis就会自动触发bgsave命令。如果有多个save配置，那么任一条件满足就会触发一次bgsave&lt;/li&gt;
&lt;li&gt;当redis通过shutdown命令接收到关闭服务器请求时，或接收到标准的TERM信号时，会执行一个save命令，阻塞所有客户端，不再执行客户端发送的任何命令，并在save命令执行完毕之后关闭服务器&lt;/li&gt;
&lt;li&gt;当一个redis服务器连接另一个redis服务器，并向对方发送SYNC命令来开始一次复制操作的时候，如果主redis目前没有在执行bgsave操作，或主redis并非刚刚执行完bgsave操作，那么主服务器就会执行bgsave&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;执行bgsave而导致的停顿时间取决于redis所在的系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;真实硬件、VMware、KVM：Redis进程每占用1GB内存，创建该进程的子进程所需要的时间就要增加10-20毫秒&lt;/li&gt;
&lt;li&gt;Xen虚拟机：每1GB，增加时间200-400毫秒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AOF持久化选项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;appendonly no
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

#当aof文件体积大于64MB，并且aof文件的体积比上一次重写之后的体积大了至少1（100%）倍的时候，redis将执行bgrewriteaof命令
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;appendfsync的选项及同步频率&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;同步频率&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;always&lt;/td&gt;
&lt;td&gt;每个Redis写命令都要同步写入硬盘。这样会严重降低redis的速度，不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;everysec&lt;/td&gt;
&lt;td&gt;每秒执行1次同步，显式的将多个写命令同步到硬盘，建议用这个&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;让操作系统来决定应该何时进行同步，不推荐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;如果选择always选项，一般机械硬盘每秒只能处理200个写命令，固态硬盘每秒大概也只能处理几万个写命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AOF的主要问题是备份文件的大小会越来越大。可以向redis发送&lt;code&gt;BGREWRITEAOF&lt;/code&gt;命令，这个命令会通过移除AOF文件中的冗余命令来重写AOF文件，使AOF文件的体积变的尽可能的小。&lt;/p&gt;
&lt;h3 id=&#34;redis主从&#34;&gt;Redis主从&lt;/h3&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实际中最好还是让主服务器只适用50%-65%的内存，留下30%-45%的内存用于执行bgsave命令和创建记录写命令的缓冲区&lt;/li&gt;
&lt;li&gt;从服务器在进行同步时会清空自己的所有数据&lt;/li&gt;
&lt;li&gt;redis不支持主主复制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同步过程&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;主服务器操作&lt;/th&gt;
&lt;th&gt;从服务器操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;（等待命令）&lt;/td&gt;
&lt;td&gt;连接主服务器，发送sync命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;开始执行bgsave，且使用缓冲区记录bgsave之后执行的所有写命令&lt;/td&gt;
&lt;td&gt;根据配置选项来决定是继续使用现有数据处理请求，还是向请求者返回错误&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;bgsave完成，向从服务器发送rdb文件，且在发送期间依然用缓冲区记录发送期间的写命令&lt;/td&gt;
&lt;td&gt;丢弃所有旧数据，开始载入主服务器发来的rdb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;开始将缓冲区里的写命令发送给从服务器&lt;/td&gt;
&lt;td&gt;rdb载入完成，开始接受命令请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;缓冲区命令发送完毕；然后每执行一个新的写命令都会向从服务器发送相同的命令&lt;/td&gt;
&lt;td&gt;执行主服务器发来的缓冲区所有命令，并从现在起，接受并执行主服务器发来的每个写命令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;配置文件中配置SLAVEOF和命令行SLAVEOF的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SLAVEOF配置：会首先载入当前可用的RDB或者AOF，载入后才开始同步过程&lt;/li&gt;
&lt;li&gt;SLAVEOF命令：直接开始尝试连接主服务器，并开始同步过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主从链：从服务器可以拥有自己的从服务器，这就构成了主从链。如果从X拥有从Y，那么当从X在跟自己master同步时，会断开与从Y的连接，导致从Y需要重新连接并重新同步（rsync）。主从链主要为了减轻多从服务器时主服务器的同步压力。&lt;/p&gt;
&lt;p&gt;可以通过INFO命令的输出结果&lt;code&gt;aof_pending_bio_fsync&lt;/code&gt;如果是0，则表示服务器已经将已知的数据都保存到硬盘了。&lt;/p&gt;
&lt;p&gt;验证备份文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;redis-check-aof file.aof
redis-check-dump dump.rdb
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;备份文件修复，只能修复aof，rdb不支持
修复命令&lt;code&gt;redis-check-aof --fix file.aof&lt;/code&gt;，原理就是删除出错写指令及之后的所有写指令，一般也就是删除aof文件末位的不完整写命令&lt;/p&gt;
&lt;p&gt;为什么Redis没有典型的加锁功能？不是没有锁，只是锁是乐观锁&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传统关系型数据库的锁功能，缺点在于持有锁的的客户端越慢，等待解锁的客户端被阻塞的时间越长&lt;/li&gt;
&lt;li&gt;redis为了尽可能的减少客户端的等待时间，并不会在执行watch命令时对数据进行加锁。相反，redis只会在数据已经被其他客户端抢先修改的情况下，通知执行了watch命令的客户端，这是乐观锁（optimistic locking）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;redis性能测试命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;redis-benchmark -c 1 -q
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关于测试结果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般不使用pipeline流水线的话，python客户端的性能大概是redis-benchmark显示性能的50%-60%&lt;/li&gt;
&lt;li&gt;若自己客户端性能只有redis-benchmark的30%以下或者返回&lt;code&gt;Cannot assign requested address&lt;/code&gt;错误，可能是每次发送命令时都创建了新的连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应用示例&#34;&gt;应用示例&lt;/h3&gt;
&lt;p&gt;传统日志记录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接写log文件&lt;/li&gt;
&lt;li&gt;通过系统syslog服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;syslog的守护进程推荐使用syslog-ng替代rsyslogd&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《Docker经典实例》</title>
      <link>https://blog.gourds.site/post/book/docker_cookbook/</link>
      <pubDate>Fri, 20 Aug 2021 12:28:33 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/docker_cookbook/</guid>
      
        <description>&lt;p&gt;笔记：这书很不推荐，内容浅显又特别能水&lt;/p&gt;
&lt;h3 id=&#34;docker-cookbook&#34;&gt;Docker Cookbook&lt;/h3&gt;
&lt;p&gt;docker kill SIGKILL信号
docker stop SIGTERM信号，一定时间内容器未停止会再发送SIGKILL信号&lt;/p&gt;
&lt;p&gt;查看数据保存在宿主机上的位置
docker inspect -f {{.Mounts}} ID&lt;/p&gt;
&lt;p&gt;docker image&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commit方式&lt;/li&gt;
&lt;li&gt;Dockerfile方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看在容器中对镜像做出的修改
docker diff ID&lt;/p&gt;
&lt;p&gt;镜像的导入导出&lt;/p&gt;
&lt;p&gt;docker export ID &amp;gt; update.tar
docker import - update &amp;lt; update.tar&lt;/p&gt;
&lt;p&gt;docker save -o update1.tar update
docker load &amp;lt; update1.tar
区别：保存一个镜像会保留它的历史，而导出容器会对它的历史进行压缩。&lt;/p&gt;
&lt;p&gt;CMD可以通过&lt;code&gt;docker run&lt;/code&gt;后面的参数来覆盖，而ENTRYPOINT只能通过&lt;code&gt;docker run&lt;/code&gt;的&lt;code&gt;--entrypoint&lt;/code&gt;参数来覆盖。&lt;/p&gt;
&lt;p&gt;Dockerfile最佳实践&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在每个容器中只运行一个进程&lt;/li&gt;
&lt;li&gt;对容器的修改应该从基础镜像重新创建它&lt;/li&gt;
&lt;li&gt;使用.dockerignore文件&lt;/li&gt;
&lt;li&gt;利用docker hub官方镜像，不要重复造轮子&lt;/li&gt;
&lt;li&gt;最大限度减少镜像层的数量，并利用镜像缓存的优点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取容器IP&lt;/p&gt;
&lt;p&gt;docker inspect &amp;ndash;format &amp;lsquo;{{ .NetworkSettings.IPAddress }}&amp;rsquo; ID&lt;/p&gt;
&lt;p&gt;容器的端口映射通过两种机制实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认情况下Docker会修改宿主机的iptables规则&lt;/li&gt;
&lt;li&gt;Docker会在宿主机上启动一个轻量的代理程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看容器链接
docker inspect -f &amp;ldquo;{.HostConfig.Links}}&amp;rdquo; ID&lt;/p&gt;
&lt;h4 id=&#34;docker容器网络&#34;&gt;Docker容器网络&lt;/h4&gt;
&lt;p&gt;默认情况下，DOcker会在宿主机上创建一个名为docker0的Linux网桥设备。该设备拥有一个私有网络地址及其所属子网。分配给Docker网桥的子网地址为&lt;code&gt;172.[17-31].42.1/16&lt;/code&gt;、&lt;code&gt;10.[0-255].42.1/24&lt;/code&gt;、&lt;code&gt;192.168.[42-44].1/24&lt;/code&gt;中第一个没有被占用的子网地址。容器链接到网桥的网络接口会把docker0网络设备作为网关。&lt;/p&gt;
&lt;p&gt;借助于Linux的IP转发功能和Docker引擎所管理的iptables规则，Docker为容器提供了对外部网络和NAT功能的访问&lt;/p&gt;
&lt;p&gt;确认IP转发功能已开启&lt;code&gt;cat /proc/sys/net/ipv4/ip_forword&lt;/code&gt;为1则是开启&lt;/p&gt;
&lt;p&gt;Docker的三种网络模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网桥（默认）&lt;/li&gt;
&lt;li&gt;主机模式&lt;/li&gt;
&lt;li&gt;无网络模式&lt;/li&gt;
&lt;li&gt;与其他容器共享网络&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pipework
weaveworks&lt;/p&gt;
&lt;h3 id=&#34;远程访问docker&#34;&gt;远程访问Docker&lt;/h3&gt;
&lt;p&gt;修改docker配置&lt;code&gt;/etc/default/docker&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;...
DOCKER_OPTS=&amp;#34;-H tcp://127.0.0.1:2375&amp;#34;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;docker -H tcp://127.0.0.1:2375 images
#or
curl -s http://127.0.0.1:2375/images/json |python -m json.tool
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;kubernetes&#34;&gt;kubernetes&lt;/h3&gt;
&lt;p&gt;功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器编排&lt;/li&gt;
&lt;li&gt;可靠的容器重启&lt;/li&gt;
&lt;li&gt;自愈&lt;/li&gt;
&lt;li&gt;高集群利用率&lt;/li&gt;
&lt;li&gt;组织和分组&lt;/li&gt;
&lt;li&gt;水平扩展和复制&lt;/li&gt;
&lt;li&gt;微服务友好&lt;/li&gt;
&lt;li&gt;简化运维&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kubernetes架构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kubernetes master包括（API server、Scheduler、Controller Mgr）。提供了API来收集和展现集群当前状态，并在节点之间分配pod。大多数用户将始终与master API直接交互&lt;/li&gt;
&lt;li&gt;主节点存储（etcd）。目前k8s的所有持久化状态都保存在etcd中&lt;/li&gt;
&lt;li&gt;kubelet。agent运行在每个节点智商，负责控制Docker，向master报告自己的状态&lt;/li&gt;
&lt;li&gt;kubernetes proxy。运行在每个节点智商，为本地容器提供了一个单一的网络接口，以连接到一组pod&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看容器状态&lt;code&gt;docker stats ID&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gliderlabs/logspout&#34;&gt;Docker log 收集&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《实用网络流量分析技术》</title>
      <link>https://blog.gourds.site/post/book/common_network_flow_analyzes/</link>
      <pubDate>Wed, 18 Aug 2021 12:17:17 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/common_network_flow_analyzes/</guid>
      
        <description>&lt;h3 id=&#34;实用流量分析技术-笔记&#34;&gt;实用流量分析技术 笔记&lt;/h3&gt;
&lt;p&gt;不同操作系统的初始TTL值不同，一般情况下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows：128&lt;/li&gt;
&lt;li&gt;Aix：60&lt;/li&gt;
&lt;li&gt;Solaris: 255&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络丢包的可能原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链路层&lt;/li&gt;
&lt;li&gt;网络层&lt;/li&gt;
&lt;li&gt;网络拥塞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个IP包都会有一个特定的Identification标识，且同主机一段时间内应该是不同的。&lt;/p&gt;
&lt;p&gt;例子：如收到同Identification标识的数据包，且TTL不同，很可能是网络中存在路由环路&lt;/p&gt;
&lt;p&gt;问题：
- 为什么本机发出的TCP包，Identification都是0
- TCP数据传输包是 TLSv1.2&lt;/p&gt;
&lt;p&gt;抓包常见协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARP&lt;/li&gt;
&lt;li&gt;ICMP&lt;/li&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;UDP&lt;/li&gt;
&lt;li&gt;MDNS（播dns（Multicast DNS），mDNS主要实现了在没有传统DNS服务器的情况下使局域网内的主机实现相互发现和通信，使用的端口为5353，遵从dns协议，使用现有的DNS信息结构、名语法和资源记录类型。并且没有指定新的操作代码或响应代码。）&lt;/li&gt;
&lt;li&gt;SSDP（简单服务发现协议，是应用层协议，是构成UPnP（通用即插即用）技术的核心协议之一。它为网络客户端（network client）提供了一种发现网络服务（network services）的机制，采用基于通知和发现路由的多播方式实现。）&lt;/li&gt;
&lt;li&gt;LLC（逻辑链路控制(LLC Logical Link Control) 层协议,LLC类似于国际标准化组织OSI - 7 层参考模型中的第2层———数据链路层。LLC 主要作用是在移动台MS (Mobile Subscri2ber) 和GPRS 业务支持节点SGSN(Serving GPRS Sup2port Node) 的Layer - 3 的实体之间传送信息。）&lt;/li&gt;
&lt;li&gt;NBNS（网络基本输入/输出系统 (NetBIOS) 名称服务器 (NBNS) 协议是 TCP/IP 上的 NetBIOS (NetBT) 协议族的一部分，它在基于 NetBIOS 名称访问的网络上提供主机名和地址映射方法）&lt;/li&gt;
&lt;li&gt;STP（STP（Spanning Tree Protocol）是生成树协议的英文缩写，可应用于计算机网络中树形拓扑结构建立，主要作用是防止网桥网络中的冗余链路形成环路工作。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络中传输的数据包大小是不一样的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP数据包：40-1500字节&lt;/li&gt;
&lt;li&gt;以太网帧：64-1518字节（包含4字节的CRC）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，网络中的最小包和最大包是最多的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用较多的TCP/IP协议在实际传输中（SYN/SYN ACK/RST/FIN）都是小包&lt;/li&gt;
&lt;li&gt;数据传输时一般是大包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据包数量监控&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每秒数据包数量（pps）&lt;/li&gt;
&lt;li&gt;每秒广播包数量&lt;/li&gt;
&lt;li&gt;每秒组播包数量&lt;/li&gt;
&lt;li&gt;不同大小数据包数量，如64B数据包数量、1500B数据包数量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;异常流量的危害&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大量的流量导致网络拥塞，从而出现丢包导致网络服务质量下降&lt;/li&gt;
&lt;li&gt;大量数据包导致网络设备处理性能下降，从而导致网络服务质量下降&lt;/li&gt;
&lt;li&gt;不正常的数据报影响网络的正常访问，破坏网络的正常拓扑结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;异常流量的产生&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;病毒引起的异常网络流量
&lt;ul&gt;
&lt;li&gt;CodeRed、Nimda、冲击波等蠕虫病毒&lt;/li&gt;
&lt;li&gt;ARP病毒&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络攻击引起的异常网络流量
&lt;ul&gt;
&lt;li&gt;Dos攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不正常的网络配置引起的异常网络流量
&lt;ul&gt;
&lt;li&gt;物理环路或路由环路&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不正当的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;蠕虫病毒分析
一般是指通过网络在计算机间复制自身进行传播的病毒。与传统病毒不同，它并不是以感染文件来达到传播自己的目的，蠕虫病毒不寄生于其他文件上，而是通过网络直接将自身复制到对方的计算机上并运行来达到复制自身的目的，有时自身甚至只在被感染的计算机的内存中驻留，并没有实体文件。&lt;/p&gt;
&lt;p&gt;定位蠕虫病毒：目前比较好的还是通过流量分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过分析主机发送/接收数据包的数量来定位。（如：一些主机发送数据包数量远远高于接收数据包数量）&lt;/li&gt;
&lt;li&gt;通过分析主机的会话来定位。（如：向很多主机发送连接请求，但大多数通信的流量很小，只有1个或2个数据包）&lt;/li&gt;
&lt;li&gt;通过法宝的异常目的地址来定位。（如：流量中有很多异常的目的地址）&lt;/li&gt;
&lt;li&gt;通过蠕虫病毒的特征码来定位。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P2P(peer to peer)应用分析
与传统CS模式不同，P2P工作方式中，每个客户端既是客户端也是服务器。每个客户端间都是采用peer to peer的数据传输方式，下载同一个文件的众多用户中的每一个用户终端只需要下载文件的一个片段，然后互相交换，最终每个用户（peer）都能得到完整的文件。&lt;/p&gt;
&lt;p&gt;BitTorrent文件共享传输中的计算机类型有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;种子计算机。共享自身文件给其他用户的计算机&lt;/li&gt;
&lt;li&gt;Announce服务器。记录了所有和该文件共享下载相关的地址，端口信息，也就是每个Peer的信息&lt;/li&gt;
&lt;li&gt;客户端终端计算机。每个下载种子计算机共享文件的计算机就是客户端计算机，每个Peer通过Announce服务器了解种子计算机和其他Peer的信息，然后同它们进行PeerToPeer的通信来获取文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P2P客户端特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;既接收数据同时又发送数据。往往发送的数据量远超过接收到的数据量&lt;/li&gt;
&lt;li&gt;同大量的主机进行会话&lt;/li&gt;
&lt;li&gt;传输端口不定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ARP病毒分析&lt;/p&gt;
&lt;p&gt;现在流行的ARP病毒实际上是一种进行ARP欺骗的网络攻击工具，通过ARP欺骗达到截获他人通信数据的目的，一般分别对网关和网络中的主机进行ARP欺骗使主机和外部通信的流量都先经过感染ARP病毒的主机，然后转发至真正的目的地址。&lt;/p&gt;
&lt;p&gt;判别ARP病毒流量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否大量发送ARP请求以及伪造大量的ARP回应&lt;/li&gt;
&lt;li&gt;分析网络中捕获的向外网发送数据包的MAC是否是本网段网关的MAC地址相同&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP连接分析（Transmission Control Protocol传输控制协议）&lt;/p&gt;
&lt;p&gt;服务器的拒绝包围TCP RST包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器不提供客户端请求端口的服务&lt;/li&gt;
&lt;li&gt;服务器保持的TCP连接数达到极限，不能再接收客户端连接请求&lt;/li&gt;
&lt;li&gt;服务器上指定服务宕机&lt;/li&gt;
&lt;li&gt;防火墙策略不允许，防火墙发送RST数据包中断连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP的半连接
半连接是由不正常的客户端引起的，客户端发送TCP连接请求包SYN后不再发送后续的数据包，使TCP的三次握手不完整，无法建立连接。大量的TCP半连接占用服务器的TCP连接资源，直接影响服务器的服务能力&lt;/p&gt;
&lt;p&gt;TCP连接的关闭有两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四次握手关闭&lt;/li&gt;
&lt;li&gt;重置式关闭&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;造成TCP数据重传的主要原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络拥塞导致的网络丢包&lt;/li&gt;
&lt;li&gt;网络设备运行不正常导致丢包&lt;/li&gt;
&lt;li&gt;MTU设置不匹配&lt;/li&gt;
&lt;li&gt;数据接收方运行不正常&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>《持续交付2.0》</title>
      <link>https://blog.gourds.site/post/book/continuous_delivery_2.0/</link>
      <pubDate>Mon, 16 Aug 2021 17:34:42 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/continuous_delivery_2.0/</guid>
      
        <description>&lt;p&gt;配置信息的版本管理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;环境配置项（如配置中心地址）&lt;/li&gt;
&lt;li&gt;应用配置项（如Jvm配置，路径配置，账号密码）&lt;/li&gt;
&lt;li&gt;业务配置项（配置与业务行为相关，如功能开关）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;软件工程&#34;&gt;软件工程&lt;/h3&gt;
&lt;p&gt;瀑布软件开发：重计划、重流程、重文档&lt;/p&gt;
&lt;p&gt;敏捷软件开发：强调发挥人的主观能动性，提倡面对面沟通，拥抱变化，通过迭代和增量开发尽早交付有价值的软件。&lt;/p&gt;
&lt;p&gt;敏捷宣言：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个体和互动高于流程和工具&lt;/li&gt;
&lt;li&gt;工作的软件高于详尽的文档&lt;/li&gt;
&lt;li&gt;客户合作高于合同谈判&lt;/li&gt;
&lt;li&gt;响应变化高于遵循计划&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是说，尽管右项有其价值，我们更重视左项的价值。&lt;/p&gt;
&lt;p&gt;敏捷软件开发应遵循的12原则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽早的持续交付有价值的软件，以便让客户满意，这是优先级最高的事情。&lt;/li&gt;
&lt;li&gt;即使在开发阶段后期，也欢迎需求变化。为了让客户获得业务竞争优势，利用敏捷过程来应对变化&lt;/li&gt;
&lt;li&gt;频繁交付可工作的软件，建议采用较短的交付周期（通常几周或一两个月）&lt;/li&gt;
&lt;li&gt;在整个项目过程中，业务人员和开发人员每天能够一起工作一段时间&lt;/li&gt;
&lt;li&gt;围绕积极的个体，建立项目团队。给他们需要的环境和支持，并相信他们能够完成工作&lt;/li&gt;
&lt;li&gt;不论团队内外，传递信息效果最好效率也最高的方式是面对面的交谈。&lt;/li&gt;
&lt;li&gt;可工作的软件是进度的首要度量标准&lt;/li&gt;
&lt;li&gt;敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续&lt;/li&gt;
&lt;li&gt;坚持不懈地追求技术卓越和良好设计，敏捷能力由此增强&lt;/li&gt;
&lt;li&gt;以简洁为本，它是极力减少不必要工作量的艺术&lt;/li&gt;
&lt;li&gt;最好的架构、需求和设计出自自组织团队&lt;/li&gt;
&lt;li&gt;团队定期地反思如何能提高成效，并依此调整自身的举止表现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;持续交付4个核心原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;坚持少做&lt;/li&gt;
&lt;li&gt;持续分解问题&lt;/li&gt;
&lt;li&gt;坚持快速反馈&lt;/li&gt;
&lt;li&gt;持续改进并衡量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常见架构模式&#34;&gt;常见架构模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;微核架构（核心框架+插件）&lt;/li&gt;
&lt;li&gt;微服务架构（&lt;/li&gt;
&lt;li&gt;巨石架构/巨石应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;巨石应用的优缺点
优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利于开发和调试&lt;/li&gt;
&lt;li&gt;部署操作简单&lt;/li&gt;
&lt;li&gt;易扩展（负载均衡+多server）
劣势：&lt;/li&gt;
&lt;li&gt;对整体程序不熟悉的人来说，容易产生混乱的代码，污染整个应用，给老代码的学习和理解带来困难&lt;/li&gt;
&lt;li&gt;难与新技术共同使用&lt;/li&gt;
&lt;li&gt;只能将整个应用作为一个整体进行扩展&lt;/li&gt;
&lt;li&gt;持续部署困难。为了更新一个组件，必须重新部署整个应用程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;架构改造实施模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拆迁者模式（代码重构）&lt;/li&gt;
&lt;li&gt;绞杀者模式（保持原遗留系统不变，当开发新功能时，重新开发一个服务，实现新功能，通过不断构建新的服务，逐步使旧系统失效，并最终替代它）&lt;/li&gt;
&lt;li&gt;修缮者模式（将遗留系统的部分功能与其余部分隔离，以新的架构进行单独的改善，在改善的同时，需要保证与其他部分仍能协同工作）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;低风险发布&#34;&gt;低风险发布&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;蓝绿部署（AB两套环境，交替成为生产环境和测试环境）&lt;/li&gt;
&lt;li&gt;滚动部署（从服务集群中选择一个或者多个服务单元，停止服务后执行版本更新，再重新投入使用，循环往复，直至集群中所有服务实例都更新到新版本，与蓝绿部署相比更加节省资源）&lt;/li&gt;
&lt;li&gt;金丝雀发布（灰度发布）（泛指通过让一小部分用户先行使用新版本，以便提前发现软件的问题，没问题的话逐步扩大推送范围）&lt;/li&gt;
&lt;li&gt;暗部署（指功能或特性发布前，将其第一个版本部署到生产环境，以便向最终用户提供该功能之前，团队可以对其进行测试并发现可能的错误。主要是用户无感知）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;影响发布频率的因素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增量发布带来的收益和可能性&lt;/li&gt;
&lt;li&gt;每次发布或部署的操作执行成本有多高&lt;/li&gt;
&lt;li&gt;出现问题的概率与由这些问题带来的成本有多少&lt;/li&gt;
&lt;li&gt;维护同一软件的不同版本带来的成本&lt;/li&gt;
&lt;li&gt;高频发布对工程师的技能要求&lt;/li&gt;
&lt;li&gt;支撑这种高频发布所需要的基础工具设施与流程完整性&lt;/li&gt;
&lt;li&gt;组织对这种高频发布的态度与文化取向&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据监测&#34;&gt;数据监测&lt;/h3&gt;
&lt;p&gt;生产环境监测范围&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源监控（系统基础设施健康度）
&lt;ul&gt;
&lt;li&gt;cpu、内存、Disk、Network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;应用监控（应用程序运行健康度）
&lt;ul&gt;
&lt;li&gt;进程存活状态&lt;/li&gt;
&lt;li&gt;是否正常对外服务，是否功能缺陷，是否正常连接数据库&lt;/li&gt;
&lt;li&gt;是否有超时&lt;/li&gt;
&lt;li&gt;应用服务抛出的异常和报错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;业务监控（业务指标健康度）
&lt;ul&gt;
&lt;li&gt;如，用户访问量&lt;/li&gt;
&lt;li&gt;页面浏览数&lt;/li&gt;
&lt;li&gt;订单量、转化率、交易额等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据的标准化，在功能实现方案之外，事先对业务数据的进行定义和规划&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对业务指标的定义。即与该功能相关的业务指标是什么，与其他业务指标有哪些关联性，以及如何计算这个业务指标&lt;/li&gt;
&lt;li&gt;数据事件的定义。即为了得到这个业务指标的数据，应该在产品代码的那个位置埋设监听事件，输入和输出格式是什么样的，与其他时间之间的关系是什么。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps：缺乏经验的产品经理对功能的实现的关注度远远高于对数据的关注度&lt;/p&gt;
&lt;p&gt;检测数据的3个衡量维度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正确性。&lt;/li&gt;
&lt;li&gt;全面性。收集的信息是否足以支持团队做出决策&lt;/li&gt;
&lt;li&gt;及时性。数据的发生到能够支持决策所需的处理时间足够短&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;告警海洋与智能化管理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每当出现生产事故后，事故复盘分析必须有两个行动项：一是数理当前日志检测和告警点，把相关人员全部配置一遍，生怕漏掉任何一个人；二是加入更多的监测点和报警。一方面是告警数量多，希望减少告警；
另一方面是害怕出事了没有告警，只能加入更多的告警。最终的胜利者通常都是后者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;事实上，很大一部分告警都会被接受者直接忽略，看都不看，原因主要有两点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;告警信息的第一处理人不是自己&lt;/li&gt;
&lt;li&gt;告警信息是一个预备报警&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;告警的原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正确性及真实性&lt;/li&gt;
&lt;li&gt;及时性&lt;/li&gt;
&lt;li&gt;可操作性【当收到告警信息后，接警人应该可以针对这个告警做出相应的操作，否则告警信息就如同垃圾短信一样，应该将其屏蔽，因为它会令工作效率降低】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缓解告警海洋&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过关联分析，让监控点离问题发生地更近&lt;/li&gt;
&lt;li&gt;通过动态阈值设定合理的告警&lt;/li&gt;
&lt;li&gt;定期梳理告警设置，清理不必要的告警&lt;/li&gt;
&lt;li&gt;通过人工智能动态解除告警&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生产环境中的测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建自用的测试数据，确保不污染真实用户的数据&lt;/li&gt;
&lt;li&gt;使用的测试数据尽可能真实&lt;/li&gt;
&lt;li&gt;不要修改真实用户的数据&lt;/li&gt;
&lt;li&gt;创建测试专用的用户访问凭证，登录生产环境&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>《网络是怎样连接的》</title>
      <link>https://blog.gourds.site/post/book/how_is_the_network_connected/</link>
      <pubDate>Sat, 31 Jul 2021 13:34:42 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/how_is_the_network_connected/</guid>
      
        <description></description>
      
    </item>
    
    <item>
      <title>《这些年，那些事》</title>
      <link>https://blog.gourds.site/post/book/%E8%BF%99%E4%BA%9B%E5%B9%B4%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Fri, 23 Jul 2021 17:53:14 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/%E8%BF%99%E4%BA%9B%E5%B9%B4%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;人要到了三十多岁，才慢慢开始琢磨上一代人的心思，会站在他们那边想，有时候暗暗分析分析他们年轻的时候是怎么过来的，为什么会有这种性格和脾气，他们的欢喜和恐惧是什么。年轻的时候，当然是一味的反叛，即使是顺从，也是很压抑的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你要照顾家里，辛苦你了，不过，当你的弟弟妹妹，也很辛苦。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Jenkins_introduction</title>
      <link>https://blog.gourds.site/post/ppt/jenkins_introduction/</link>
      <pubDate>Wed, 21 Jul 2021 10:25:35 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/ppt/jenkins_introduction/</guid>
      
        <description>&lt;!-- .slide: data-background=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/backgrounds_keyboard.jpg&#34;--&gt;
&lt;h1 id=&#34;jenkins-介绍&#34;&gt;Jenkins 介绍&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;例行介绍&lt;/li&gt;
&lt;li&gt;pipeline的设计理念&lt;/li&gt;
&lt;li&gt;我司的最佳实践&lt;/li&gt;
&lt;li&gt;实际案例分析&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;为什么选择Jenkins&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;社区活跃&lt;/li&gt;
&lt;li&gt;插件丰富&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;我们用Jenkins来做什么&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;build&lt;/li&gt;
&lt;li&gt;deploy&lt;/li&gt;
&lt;li&gt;crontab&lt;/li&gt;
&lt;li&gt;tools&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;流水线设计原则pipeline&#34;&gt;流水线设计原则（PIPELINE）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;一次构建，多次使用&lt;/li&gt;
&lt;li&gt;与业务逻辑松耦合&lt;/li&gt;
&lt;li&gt;并行化原则&lt;/li&gt;
&lt;li&gt;快速反馈优先&lt;/li&gt;
&lt;li&gt;重要反馈优先&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;graph LR;
  A(&amp;#34;source code&amp;#34;)--&amp;gt;B(&amp;#34;Build&amp;#34;);
  B--&amp;gt;C(&amp;#34;S3/OSS&amp;#34;);
  B--&amp;gt;D(&amp;#34;UT&amp;#34;);
  D--&amp;gt;E(&amp;#34;Dev Env&amp;#34;);
  E--&amp;gt;F(&amp;#34;QA&amp;#34;);
  C--&amp;gt;G(&amp;#34;Deploy Prod&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;最佳实践&#34;&gt;最佳实践&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;权限&lt;/li&gt;
&lt;li&gt;架构&lt;/li&gt;
&lt;li&gt;parameters&lt;/li&gt;
&lt;li&gt;DSL &amp;amp;&amp;amp; 共享库&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;权限&#34;&gt;权限&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;role-based strategy&lt;/li&gt;
&lt;li&gt;Folder Authorization Strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;权限规则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24767&#34;&gt;Jenkins Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/zh/blog/2019/10/28/introducing-new-folder-authorization-plugin/&#34;&gt;Foldder Authorization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;#正则示例
jws1.*
IT-jws1(/merge(/.*)?)?
IT-jws1(/register(/(merge.*|register-etcd))?)?
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/jenkins_permission_1.jpeg&#34; alt=&#34;jenkins_permission_1&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;架构&#34;&gt;架构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;node(master/slave)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;scm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GitUrl&lt;/span&gt;
                &lt;span class=&#34;nf&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GitCredential&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GitBranchName&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;your-node&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;parameters&#34;&gt;Parameters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;choice&lt;/li&gt;
&lt;li&gt;active choice&lt;/li&gt;
&lt;li&gt;file&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;str&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/jenkins_param_text_1.png&#34; alt=&#34;jenkins_param_text_1&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/jenkins_jobs_1.png&#34; alt=&#34;jenkins_dynmic_parameter&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/jenkins_2.png&#34; alt=&#34;jenkins_2&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;dsl--共享库&#34;&gt;DSL &amp;amp;&amp;amp; 共享库&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkinsci.github.io/job-dsl-plugin/#path/job-wrappers&#34;&gt;DSL&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;project-a/ansible-test6&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;scm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dada&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;git@172.21.0.11:/data/go-project/go-test&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;git-pass&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;parameters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;activeChoiceParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Allows user choose from multiple choices&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;filterable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;choiceType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SINGLE_SELECT&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//https://jenkinsci.github.io/job-dsl-plugin/#path/job-parameters-activeChoiceParam-choiceType
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;groovyScript&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;return[&amp;#34;aaa&amp;#34;,&amp;#34;bbb&amp;#34;,&amp;#34;ccc&amp;#34;]&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;fallbackScript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;fallback choice&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;activeChoiceParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Allows user choose from multiple choices&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;filterable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;choiceType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CHECKBOX&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;groovyScript&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;return[&amp;#34;a3&amp;#34;,&amp;#34;b3&amp;#34;,&amp;#34;c3&amp;#34;]&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;fallbackScript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;fallback choice&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;steps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;echo $foo $bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Groovy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javaposse.jobdsl.dsl.DslFactory&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javaposse.jobdsl.dsl.Job&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkinsci/job-dsl-plugin/blob/master/job-dsl-core/src/main/groovy/javaposse/jobdsl/dsl/DslFactory.groovy&#34;&gt;Github Jenkins DSL&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;helper_p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;TiAnsibleBuildJob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;job_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;ansible-deploy/playbook/jws/ops-gamex-merge.yml&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;gamex_merge&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;parameters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;fileParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;merge.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Choice excel file&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;choiceParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;runType&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;merge&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;rollback&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;默认合服用，拆分选rollback&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;activeChoiceParam&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
              &lt;span class=&#34;n&#34;&gt;choiceType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CHECKBOX&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
              &lt;span class=&#34;c1&#34;&gt;//SINGLE_SELECT, MULTI_SELECT, CHECKBOX, RADIO
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;groovyScript&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;\
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                  return [
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;merge-tools-deploy&amp;#39;,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;merge-tools-config&amp;#39;,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;etcd-update&amp;#39;,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;merge-tools-run&amp;#39;,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;after-clean-db-merge&amp;#39;,
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                          &amp;#39;merge-log-dispose&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                         ].collect { &amp;#34;$it:selected&amp;#34; }
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;                      &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stripIndent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//fallbackScript(&amp;#39;&amp;#34;fallback choice&amp;#34;&amp;#39;)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Gourds/hugo_blog_comments/main/blog_img/archive_2021/jenkins_dsl_groovy_1.png&#34; alt=&#34;jenkins_dsl_groovy_1&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;共享库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;(root)
+- src                     # Groovy source files
|   +- org
|       +- foo
|           +- Bar.groovy  # for org.foo.Bar class
+- vars
|   +- foo.groovy          # for global &amp;#39;foo&amp;#39; variable
|   +- foo.txt             # help for &amp;#39;foo&amp;#39; variable
+- resources               # resource files (external libraries only)
|   +- org
|       +- foo
|           +- bar.json    # static helper data for org.foo.Bar
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;重试机制&amp;amp;&amp;amp;邮件&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Jenkins retry&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;    &lt;span class=&#34;n&#34;&gt;publishers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;retryBuild&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;rerunIfUnstable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;retryLimit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;progressiveDelay&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;extendedEmail&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;recipientList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gourds@yeah.net&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;defaultSubject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;replyToList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$DEFAULT_REPLYTO&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;defaultContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;${SCRIPT, template=&amp;#34;groovy-html.template&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;contentType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;triggers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;stillFailing&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;recipientList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gourds@yeah.net&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Ansible retry&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;upload to ftp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;upload2ftp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ ftp_host }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ ftp_port }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ ftp_user }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_pass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ ftp_passwd }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_local_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ bdc_save_path }}/{{ item[0] }}_{{ assign_date_time }}.zip&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ftp_remote_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ item[1] }}/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#Must be dir&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ftp_results&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with_together&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ log_type }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ remote_path }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;until&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ftp_results is success&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    publishers {
        extendedEmail {
            defaultSubject(&amp;#39;激活码&amp;#39;)
            replyToList(&amp;#39;$DEFAULT_REPLYTO&amp;#39;)
            contentType(&amp;#39;text/html&amp;#39;)
            defaultContent(&amp;#39;&amp;#39;&amp;#39;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;生成激活码见附件&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
                          &amp;#39;&amp;#39;&amp;#39;)
            attachmentPatterns(&amp;#39;*.csv&amp;#39;)
            contentType(&amp;#39;text/html&amp;#39;)
            triggers {
                success {
                  recipientList(&amp;#39;${MailReceive}&amp;#39;)
                  sendTo {
                      recipientList()
                   }

                }
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>《程序是怎么跑起来的》</title>
      <link>https://blog.gourds.site/post/programming/program_how_to_work/</link>
      <pubDate>Mon, 19 Jul 2021 21:13:42 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/programming/program_how_to_work/</guid>
      
        <description>&lt;h3 id=&#34;cpu&#34;&gt;CPU&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;程序是什么&lt;/p&gt;
&lt;p&gt;一个通过逻辑运算得到结果的一个工具
指示计算机每一步动作的一组指令&lt;/p&gt;
&lt;p&gt;程序是由什么组成的&lt;/p&gt;
&lt;p&gt;变量以及逻辑运算
指令和数据&lt;/p&gt;
&lt;p&gt;什么是机器语言&lt;/p&gt;
&lt;p&gt;字面上就是机器看得懂的代码
CPU可以直接识别并使用的语言&lt;/p&gt;
&lt;p&gt;正在运行的程序存储在哪&lt;/p&gt;
&lt;p&gt;运算器
内存&lt;/p&gt;
&lt;p&gt;什么是内存地址&lt;/p&gt;
&lt;p&gt;不知道
内存中用来表示命令和数据存储位置的数值&lt;/p&gt;
&lt;p&gt;计算机的构成元件中，负责程序解释和运行的是哪个&lt;/p&gt;
&lt;p&gt;cpu&lt;/p&gt;
&lt;p&gt;cpu的组成：寄存器、控制器、运算器、时钟&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;组成&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;寄存器&lt;/td&gt;
&lt;td&gt;暂存指令、数据等处理对象，类似内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;控制器&lt;/td&gt;
&lt;td&gt;负责把内存中的指令、数据等读入到寄存器，并根据执行的结果来控制整个计算机&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;运算器&lt;/td&gt;
&lt;td&gt;负责运算寄存器中的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;时钟&lt;/td&gt;
&lt;td&gt;负责发出CPU开始计时的时钟信号，也有计算机的时钟位于CPU的外部&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Tips: 如Pentium 2GHZ表示时钟信号的频率为2GHz（1GHz=10亿次/秒),即时钟频率越高CPU的运行速度越快&lt;/p&gt;
&lt;p&gt;程序是把寄存器当成对象来描述的
汇编语言是采用助记符（mov、add）来编写程序，汇编语言和机器语言基本上是一一对应的&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;二进制的0.1用10进制表示是多少
0.5&lt;/p&gt;
&lt;p&gt;用小数点后有3位的二级制树能表示十进制的0.625么&lt;/p&gt;
&lt;p&gt;将小数分为符号、尾数、基数、指数4部分进行表现的形式称为什么&lt;/p&gt;
&lt;p&gt;二进制数的基数是多少
2&lt;/p&gt;
&lt;p&gt;通过把0作为数值范围的中间值，从而在不使用符号位的情况下来表示负数的表示方法称为什么&lt;/p&gt;
&lt;p&gt;计算机是怎么处理小数运算的
如用C 将0.1累加100次得到的结果是10.000002，而不是10
原因：有一些十进制的小数无法用二进制数正确表示，如0.1，这和10进制数无法表示1/3是一样的&lt;/p&gt;
&lt;p&gt;双精度浮点数类型 用64位  表示全体小数 double
单精度浮点数类型 用32位  表示全体小数 float&lt;/p&gt;
&lt;p&gt;如果避免计算机计算出错&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回避策略，即无视错误，误差在可接受范围的话就无视&lt;/li&gt;
&lt;li&gt;将小数扩大若干倍数换成整数，然后处理后再缩小若干倍数&lt;/li&gt;
&lt;li&gt;BCD（Binary Coded Decimal）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;内存&#34;&gt;内存&lt;/h3&gt;
&lt;p&gt;十个地址信号引脚的内存IC可以指定的地址范围是多少
即2的10次方
十进制的话是0-1023
二进制的话是0000000000-1111111111&lt;/p&gt;
&lt;p&gt;高级语言中数据类型表示的是什么
占据内存区域的大小和存储在改内存区域的数据类型，如c语言中的short表示占2字节的内存区域，并且存储的是整数&lt;/p&gt;
&lt;p&gt;在32位内存地址的环境中，指针变量的长度是多少位
32位，指针指的是用于存储内存地址的变量&lt;/p&gt;
&lt;p&gt;与物理内存有着相同构造的数组的数据类型长度是多少
1字节，物理内存是以字节为单位进行数据存储的&lt;/p&gt;
&lt;p&gt;用LIFO方式进行数据读写的数据结构称为什么
栈。（Last In Fist Out），栈是一种后入先出的数据结构&lt;/p&gt;
&lt;p&gt;根据数据的大小链表分叉成两个方向的数据结构称为什么
二叉查找数（Binary search treeJ），二叉查找树指的是从节点分成两个叉的树状数据结构&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内存&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ROM&lt;/td&gt;
&lt;td&gt;Read Only Memory，即只能用来读取的内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RAM&lt;/td&gt;
&lt;td&gt;Read Access Memory，即可被读取和写入的内存&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;内存中有电源、地址信号、数据信号、控制信号等用于输入输出的大量引脚，通过为其指定地址，来进行数据的读写&lt;/p&gt;
&lt;p&gt;相同的值是不同数据类型时占用的内存也不一样，如123，当时char时占1字节，是short时占2字节，是long时占4字节&lt;/p&gt;
&lt;p&gt;指针也是一种变量，它表示的不是数据的值，而是存储着数据的内存的地址，通过使用指针就可以对任意指定地址的数据进行读写&lt;/p&gt;
&lt;p&gt;数组是高效使用内存的基础
数组是指多个同样数据类型的数据在内存中连续排列的形式。作为数组元素的各个数据会通过连续的编号被区分开来，这个编号称为索引。&lt;/p&gt;
&lt;h4 id=&#34;栈队列以及环形缓冲区&#34;&gt;栈、队列以及环形缓冲区&lt;/h4&gt;
&lt;p&gt;栈和队列都可以不通过指定地址和索引来对数组的元素进行读写。区别在于数据出入顺序不同。栈是LIFO，队列是FIFO。&lt;/p&gt;
&lt;p&gt;如果在程序中要实现栈和队列，就需要以适当的元素数来定义一个用来存储数据的数组，以及对该数组进行读写的函数对。&lt;/p&gt;
&lt;p&gt;队列一般是以环形缓冲区（ring buffer）的方式来实现的&lt;/p&gt;
&lt;h4 id=&#34;链表二叉查找树&#34;&gt;链表&amp;amp;二叉查找树&lt;/h4&gt;
&lt;p&gt;链表和二叉查找树都是不用考虑索引顺序就可以对数组元素进行读写的方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;链表可以更高效的对数组元素进行追加和删除处理&lt;/li&gt;
&lt;li&gt;二叉树可以更加高效的对数组数据进行检索&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在数组的元素中除了数据的值外，通过为其附带上上下一个元素的索引即可实现链表。所以数组在删除元素时，只要将上一个元素的下索引指向下一个元素的索引即可；&lt;/p&gt;
&lt;p&gt;二叉查找树是指在链表的基础上往数组中追加元素时，考虑到数据的大小关系，将其分成左右两个方向的表现形式。&lt;/p&gt;
&lt;h3 id=&#34;磁盘&#34;&gt;磁盘&lt;/h3&gt;
&lt;p&gt;存储程序方式指的是什么&lt;/p&gt;
&lt;p&gt;通过使用内存来提高磁盘访问速度的机制称为什么
缓存&lt;/p&gt;
&lt;p&gt;把磁盘一部分作为假想内存来使用，交换分区&lt;/p&gt;
&lt;p&gt;windows中在程序运行时，存储着可以动态加载调用的函数和数据的文件称为什么
DLL文件（Dynamic Link Library）
在EXE程序文件中，静态加载函数的方式称为什么
静态链接
在windows计算机中，一般磁盘的1个扇区时多少字节
521Byte&lt;/p&gt;
&lt;p&gt;虚拟内存的方法有分页式和分段式。&lt;/p&gt;
&lt;p&gt;扇区是对磁盘进行物理读写的最小单位。&lt;/p&gt;
&lt;h3 id=&#34;压缩&#34;&gt;压缩&lt;/h3&gt;
&lt;p&gt;文件存储的基本单位式什么
字节&lt;/p&gt;
&lt;p&gt;LZH是通过LHA等工具压缩后的扩展名&lt;/p&gt;
&lt;p&gt;在Windows中使用的SHITFT JIS字符编码中，1个半角英数是用几个字节的数据来表示的
半角英文数字用1个字节表示，汉字等全角字符是用2个字节表示&lt;/p&gt;
&lt;p&gt;BMP（BITMAP）格式的图像文件，是压缩过的么
没压缩过，BMP要比JEPG格式等压缩过的图像文件大不少&lt;/p&gt;
&lt;p&gt;可逆压缩和非可逆压缩的不同点是什么
压缩后能复原就是可逆压缩&lt;/p&gt;
&lt;p&gt;RLE算法。如AAABB这个数据压缩过的文件压缩后就是A3B2。就是把文件内容用“数据*重复次数”的形式来表示的压缩方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不适合文本文件的压缩，因为同样字符多次重复出现的情况不多见&lt;/li&gt;
&lt;li&gt;适用与数据经常连续出现的图像、文件等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈夫曼算法
LHA使用的就是哈夫曼算法。
哈夫曼算法关键在于“多次出现的数据用小于8位的字节数来表示，不常用的数据则可以用超过8位的字节数来表示。&lt;/p&gt;
&lt;h3 id=&#34;程序的运行环境&#34;&gt;程序的运行环境&lt;/h3&gt;
&lt;h3 id=&#34;从源文件到可执行文件&#34;&gt;从源文件到可执行文件&lt;/h3&gt;
&lt;p&gt;程序在每次运行时，程序内的变量及函数被分配到内存的地址都是不同的，这是如何表示的？
虚拟内存地址。在程序运行时，虚拟的内存地址会转换成实际的内存地址，链接器会在EXE文件的开头追加转换内存地址所需的必要信息，这个信息称为再配置信息&lt;/p&gt;
&lt;p&gt;EXE文件的内容分为再配置信息、变量组和函数组。在程序加载到内存后除了上面4个还会额外生成两个组，即堆和栈。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;栈用来存储函数内部临时使用的变量（局部变量），以及函数调用时所用的参数的内存区域&lt;/li&gt;
&lt;li&gt;堆是用来存储程序运行时的任意数据即对象的内存区域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EXE文件中并不存在栈即堆的组。栈和堆需要的内存空间是在程序加载到内存后开始运行时得到分配的。因此，内存中的程序是由变量的内存空间、用于函数的内存空间、用于栈的内存空间以及用于堆的内存空间这4部分组成的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;栈中堆数据的存储和删除是由编译器自动生成的，不需要程序员参与&lt;/li&gt;
&lt;li&gt;堆的内存空间时根据程序员写的程序，来明确进行申请分配或释放&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论时C还是C++，如果没有在程序中明确释放堆的内存空间，那么即使在处理完毕后这些内存空间也会一直残留，这个现象被称为&lt;strong&gt;内存泄漏&lt;/strong&gt;（memory leak）&lt;/p&gt;
&lt;p&gt;垃圾回收机制（garbage collection）指的是堆处理完毕后不需要的堆内存空间的数据和对象进行清理&lt;/p&gt;
&lt;h3 id=&#34;操作系统和应用的关系&#34;&gt;操作系统和应用的关系&lt;/h3&gt;
&lt;p&gt;应用通过系统调用（system call）间接控制计算机硬件&lt;/p&gt;
&lt;h3 id=&#34;汇编&#34;&gt;汇编&lt;/h3&gt;
&lt;p&gt;汇编语言是通过助记符来描述程序的。通过跳转指令可以实现循环和条件分支。&lt;/p&gt;
&lt;p&gt;在高级语言源码中，即使数据和指令在编写的时候是分散的，编译后也会在段段定义中集合汇总起来。&lt;/p&gt;
&lt;p&gt;用汇编语言编写的代码与本地代码是一一对应的，即可以进行编译和反编译，可以任意转换。不过用高级语言生成本地代码，再反汇编至汇编语言，要进一步反汇编至高级语言源码是不太可能的，因为不是一一对应的关系。&lt;/p&gt;
&lt;p&gt;在汇编语言中，一行代表对cpu的一个指令。汇编语言一个指令的语法是操作码+操作数。如MOV A，B&lt;/p&gt;
&lt;p&gt;本地代码加载到内存才能运行，内存中存储着构成本地代码的指令和数据，程序运行时，cpu会将内存中的指令和数据读取到内部的寄存器中进行处理&lt;/p&gt;
&lt;p&gt;函数的参数是通过栈来传递，返回值是通过寄存器来返回的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在函数外部定义的称为全局变量&lt;/li&gt;
&lt;li&gt;在函数内部定义的变量称为局部变量，局部变量是临时保存在寄存器和栈中的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;硬件的控制方法&#34;&gt;硬件的控制方法&lt;/h3&gt;
&lt;p&gt;用来识别外围设备的编号称为I/O地址或I/O端口号&lt;/p&gt;
&lt;p&gt;DMA（Dicect Memory Access）是指不经过CPU中介处理，外围设备直接与主内存进行数据传输，像磁盘这种用于处理大量数据的外围设备一般都有DMA功能&lt;/p&gt;
&lt;p&gt;I/O控制器中有用于临时保存输入输出数据的内存，这个内存就是端口。
端口（Port）字面意思就是港口的意思（端口就像是在计算机和外围设备之间进行数据装卸的港口）。
一个I/O控制器可以控制一个或多个外围设备。各端口之间通过端口号来进行区分。端口号也称为I/O地址。
IN指令和OUT指令在端口号指定的端口和CPU之间进行数据的输入输出。&lt;/p&gt;
&lt;p&gt;IRQ（Interrupt Request）是指用来执行硬件中断请求的编号。IRQ是用来暂停当前正在运行的程序，并跳转到其他程序运行的必要机制，该机制称为&lt;strong&gt;中断处理&lt;/strong&gt;。
实施中断请求的是连接外围设备的I/O控制器，负责实施中断请求的是CPU。&lt;/p&gt;
&lt;p&gt;CPU接收到来自中断控制器的中断请求后，会把当前运行的程序中断，然后切换到中断处理程序。中断处理程序的第一步就是把CPU所有的寄存器数值保存到内存的栈中，当中断处理程序完成后，再把栈中的数据还原到CPU寄存器中。&lt;/p&gt;
&lt;h3 id=&#34;c&#34;&gt;C&lt;/h3&gt;
&lt;p&gt;在C中函数的处理内容是用{}括起来的，这部分内容称为模块（block）&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Bitbucket 迁移缺失commit</title>
      <link>https://blog.gourds.site/post/problems/bitbucket_migration_error/</link>
      <pubDate>Mon, 19 Jul 2021 09:34:38 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/problems/bitbucket_migration_error/</guid>
      
        <description>&lt;p&gt;&lt;strong&gt;概括：&lt;/strong&gt; 迁移bitbucket后，发现部分分支commit缺失。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;迁移过程：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对数据目录进行初次同步。使用命令&lt;code&gt;/bin/rsync -auvP --delete -e &amp;quot;ssh -p 10022&amp;quot; /source/dir/ root@dest.host:/dest/dir/ &amp;gt;&amp;gt; /tmp/rsync_rst.log 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;正式迁移开始前停止老Bitbucket的服务&lt;/li&gt;
&lt;li&gt;对数据目录进行增量同步（由于操作失误忘记加&lt;code&gt;--delete&lt;/code&gt;参数)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过google发现&lt;a href=&#34;https://confluence.atlassian.com/bitbucketserverkb/missing-commits-in-bitbucket-after-a-filesystem-migration-987137563.html&#34;&gt;官方文档&lt;/a&gt;
部分解释如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While running this sequence of commands, the &amp;ndash;delete rsync option is not used so only changes to existing files and new files are synchronized. However, files that have been copied during the earlier rsync are not deleted and this causes unexpected conflicts in the Git repositories.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;At certain intervals, Bitbucket runs a git pack-refs --all (see git-pack-refs for git-pack-refs documentation) causing the files containing the refs to the tip of the branch to be packed to the $REPOSITORY_HOME/packed-refs file.

The file containing the refs, stored as $REPOSITORY_HOME/refs/heads/feature/&amp;lt;branch_name&amp;gt;, is emptied as part of this process.



If the first rsync has been performed before the pack-refs ran and again after that without the --delete option, both the $REPOSITORY_HOME/refs/heads/&amp;lt;branch_name&amp;gt; and the $REPOSITORY_HOME/packed-refs file will be present in the target filesystem.

When that happens, git recognizes the hash in $REPOSITORY_HOME/refs/heads/&amp;lt;branch_name&amp;gt; as the tip of the branch but this is now outdated and leads to what is described as &amp;#34;missing commits&amp;#34;.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;解决：&lt;/strong&gt; 删除原同步内容，重新同步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tips：&lt;/strong&gt; 无谓的尝试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;期间尝试手动使用&lt;code&gt;touch&lt;/code&gt;命令更改最近修改的时间戳以使得rsync重新进行同步，结果确实对这部分内容进行了重传，不过问题依旧&lt;/li&gt;
&lt;li&gt;又尝试使用rsync的&lt;code&gt;--checksum&lt;/code&gt;指令进行md5校验重传（rsync默认是按照时间戳及文件大小），不过考虑到数据量较大，就没有尝试。&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>《The Road Less Traveled》</title>
      <link>https://blog.gourds.site/post/book/theroadlesstraveled/</link>
      <pubDate>Sat, 17 Jul 2021 21:41:19 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/theroadlesstraveled/</guid>
      
        <description>&lt;p&gt;《少有人走的路：心智成熟之旅》 英文原版书名即 《The Road Less Traveled》。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;感想：&lt;/strong&gt; 还是比较推荐的。读这类书目的性还是很强的，年龄如果没有和心灵共同成长，就会给自己以及他人带来麻烦。&lt;code&gt;埃尔德里奇·克里佛的一句话：“你不能解决问题，你就会成为问题。”&lt;/code&gt;，书中很多观点对我很有启发。&lt;/p&gt;
&lt;h4 id=&#34;以下为笔记整理&#34;&gt;以下为笔记整理&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;身体因快乐而结合，心灵因痛苦而靠近。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没有真正的感同身受，我一直认为我是很富有同理心的，其实很多时候所谓的同理心只是自以为站在别人的立场，人的苦难只有经历过的人才知道。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“真正的爱，不是单纯的给予，还包括适当的拒绝，及时的赞美，得体的批评，恰当的争论，必要的鼓励和有效的监督。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不知何时起，好像不会了争论，对于拒绝也没有自己想象的那么潇洒。原以为不会发火是一种美德，现在看来可能是一种病&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自律是解决人生问题最主要的工具，也是消除人生痛苦最重要的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很羡慕那些自律的人，往往我们会高估自己的能力，说要&lt;strong&gt;等&lt;/strong&gt;。。。&lt;strong&gt;就&lt;/strong&gt;。。。的，往往都不会去做。人的惰性使然，所以首先要正视自己的问题，认识到自己的懒惰，做事要从此刻就做，不要给自己任何借口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们要让我们自己，也要让我们的孩子认识到，人生的问题和痛苦具有非凡的价值。勇于承担责任，敢于面对困难，才能够使心灵变得健康。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刚好看了几期《他乡的童年》，其中日本的教育模式对我很有启发。他们会故意把门做成不易关闭的，这样寒冷的时候如果不控制关门的动作，会使门口的同学冻着；会把水龙头设计成不易使用的，用来提醒孩子们，节约用水。还有很多，总之与我们的教育恰恰相反，他们会专门为孩子们的设置各种障碍，我深以为然，在我看来温暖的心灵坚韧的品格对比一帆风顺的童年显然更为重要。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓自律，就是主动要求自己以积极的态度去承受痛苦，解决问题。自律有四个原则：推迟满足感、承担责任、忠于事实、保持平衡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个解释是我第一次接触，不过也是到目前最为认同的。以前一直忽略了一点，在我看来也是最重要的一点，就是&lt;strong&gt;积极的态度&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我是个有价值的人”——像这样对自我价值的认可，是心理健康的基本前提，也是培养自律的根基。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这点很重要，我们要对自己的价值予以肯定，不然很可能因别人的一句话、一个动作、一个眼神而惶惶不安。不要把自己活成别人的复制品，对孩子也一样，要认识到孩子有自己的人生和意义。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让上了小学的孩子正确对待家庭作业，是培养“先苦后甜”原则的最佳时机。当孩子满12岁时，应该已经无须父母敦促，就可以先做完功课，再去看电视。如果是这样，到了十五六岁以后，他们就会把这个原则内化为一种习惯，成为自己的一种常态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个其实我觉得中国大部分家长做的都不错，不过这只是个例子，其实仔细观察生活中点点滴滴都是应用的场景&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;父母自己不遵守自律的原则，就不可能成为孩子的榜样，只会成为反面教材。
父母习惯用严厉的体罚教训孩子，本质上不是教育，而是发泄自己心中的怨气和不满。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;深以为然。我向来有个看法，就是&lt;code&gt;你有的你才能给予&lt;/code&gt;，比如爱、自律、习惯等等皆是如此。言传身教，在我看来身教最重要，而且也更容易被孩子接受。今天看到个短视频，讲的是一个父亲带孩子去吃自助餐，孩子拿了很多吃的，父亲告诉孩子不能浪费云云，然后孩子吃不完趁父亲离开的间隙，把食物倒在了垃圾桶，当父亲回来后告诉父亲已经吃完了，知子莫如父，父亲就让拿垃圾桶过来看，父亲此时却并没有说孩子任何不是，而是把垃圾筒的食物默默拿起来吃，孩子哭着阻止。我想对这个孩子而言这堂课应该很难忘却&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;忽视问题的存在，反映出人们不愿推迟满足感的心理。
不能及时解决自己面临的问题，这些问题就会像山一样横亘在我们心中，阻碍心灵的成长和心智的成熟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;与前面自律类似，积极的态度很重要&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;神经官能症患者为自己强加责任，人格失调症患者则不愿承担原本属于自己的责任。
心理学界有一种公认的说法：“神经官能症患者让自己活得痛苦，人格失调症患者让别人活得痛苦。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;毫不夸张的说，这两种我应该都有。所以我可能是既让自己痛苦也让别人痛苦。。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在复杂多变的人生道路上，判断自己该为什么事和什么人负责，这是一个永远存在的难题。这个问题从未彻底解决过，因为我们必须不断地评估、再评估我们的责任所在。这个过程是痛苦的，我们必须完全自愿和主动地去进行这种反反复复的自我审视。这种自愿和主动不是天生的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;日当三省吾身，古人诚不欺我&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;埃尔德里奇·克里佛的一句话：“你不能解决问题，你就会成为问题。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;反省内心世界带来的痛苦，往往大于观察外在世界带来的痛苦，所以很多人逃避前者而选择后者。实际上，认识和忠于事实带给我们的非凡价值，将使痛苦显得微不足道。自我反省带来的快乐，甚至远远大于痛苦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;不管个人还是组织，要想接受质疑和挑战，必须要真正允许别人来检视我们的地图。完全忠于事实的第三个要求，就是我们需要一辈子保持诚实。我们必须不断自我反省，确保我们的言语能够准确地表述出我们所认知的事实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在我看来，所谓心理治疗，其实就是 “鼓励说真话的游戏”。心理医生最重要的任务，就是让患者说出真话。长时间自欺欺人，使人的愧疚积聚，就会导致心理疾病。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>重读《三国演义》</title>
      <link>https://blog.gourds.site/post/book/%E9%87%8D%E8%AF%BB_%E4%B8%89%E5%9B%BD%E6%BC%94%E4%B9%89/</link>
      <pubDate>Wed, 14 Jul 2021 22:43:46 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/%E9%87%8D%E8%AF%BB_%E4%B8%89%E5%9B%BD%E6%BC%94%E4%B9%89/</guid>
      
        <description>&lt;p&gt;前些日子突然想看书，以前屯的书这时作用就显示出来了，书架上书很多，鬼使神差，拿了本三国演义。之前只看过老三国，就是鲍国安那部，遗憾四大名著没读过，刚好趁这个机会读一下，最近也快看完了，博客也打算恢复开始写了，简单记录下乱七八糟的想法。&lt;/p&gt;
&lt;p&gt;我现在所在的公司是做游戏的，主要是三国题材。之前关于三国有不少疑问，在读的过程中也有点豁然开朗的感觉了。&lt;/p&gt;
&lt;p&gt;纵观市面上三国题材的游戏，大多LOGO都是赵云，通过读的过程，确实是感觉三国里的人物，还是赵云形象好，没啥负面新闻，关羽傲，吕布骚（专干义父），张飞太糙，刘皇叔又太爱哭。&lt;/p&gt;
&lt;p&gt;另外也有疑问&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;卧龙凤雏得一人可安天下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;感觉庞统被过誉了，可能是因为未建功而身先死。不过从读到的信息来看，死于落凤坡更多是因为心胸狭隘，他觉得孔明怕他建功，另一方面又没有对战局的清晰认识，所以送了人头。//好一匹白马，手动滑稽&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>《围城》</title>
      <link>https://blog.gourds.site/post/book/%E5%9B%B4%E5%9F%8E_%E6%9C%89%E6%84%9F/</link>
      <pubDate>Mon, 12 Jul 2021 23:08:22 +0800</pubDate>
      
      <guid>https://blog.gourds.site/post/book/%E5%9B%B4%E5%9F%8E_%E6%9C%89%E6%84%9F/</guid>
      
        <description>&lt;p&gt;文人确实是心思细腻，表达能力好，名著毕竟是名著，钱老对人物描绘把握的入木三分。
方鸿渐，苏文执，唐小姐，还有孙柔嘉里面的人物都栩栩如生，就跟真的存在一样。自己并不想读过就忘，所以记点句子，顺便也练习下表达能力。&lt;/p&gt;
&lt;p&gt;其实一直以来都并不是很会表达，少年时候的想法不知如何表达，生活中许多感悟也不知如何言语，像是一个会说话的哑巴，能言语却词不达意，希望慢慢我也可以把自己的思想分享出来。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>关于对Python面向对象的理解</title>
      <link>https://blog.gourds.site/post/programming/%E5%85%B3%E4%BA%8E%E5%AF%B9python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Tue, 10 Sep 2019 20:38:24 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/programming/%E5%85%B3%E4%BA%8E%E5%AF%B9python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      
        <description>&lt;p&gt;说起面向对象(Object Oriented Programming)首先想到的就是三个词：封装、继承和多态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;封装：&lt;/strong&gt; 目的是为了简化编程和提升安全性(标识出允许外部使用的所有成员函数和数据项)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;属性封装&lt;/li&gt;
&lt;li&gt;方法封装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;继承和多态：&lt;/strong&gt; 顾名思义，继承就是子类可以获取父类的特性，实际上就是为了更好的进行代码复用，而多态是指基于不同的父类调用同一方法也可能有不同的执行逻辑，与这个相关的还有一个有趣的名词”&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B&#34;&gt;鸭子模型&lt;/a&gt;“。&lt;/p&gt;
&lt;p&gt;另外与面向对象对应的还有个面向过程(Process Oriented)。其中的区别下面有一个通俗的解释，可以做一个参考&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面向对象是相对于面向过程的，比如你要充话费，你会想，可以下个支付宝，然后绑定银行卡，然后在淘宝上买卡，自己冲，这种种过程。但是对于你女朋友就不一样了，她是面向“对象”的，她会想，谁会充话费呢？当然是你了，她就给你电话，然后你把之前的做了一遍，然后她收到到帐的短信，说了句，亲爱的。这就是面向对象！女的思维大部分是面向“对象”的！她不关心处理的细节，只关心谁可以，和结果！&lt;/p&gt;
&lt;p&gt;来源：知乎 &lt;a href=&#34;https://www.zhihu.com/question/31021366/answer/50581592&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;python中的面向对象&#34;&gt;Python中的面向对象&lt;/h3&gt;
&lt;p&gt;在python中类的创建有两种方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用class创建&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Gourds class&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用type创建&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,),{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fun1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面两种其实并没有什么不同，为的是说一下跟type相关的有一个叫metaclass的东西
创建class后
当将class对象实例化的时候，默认会先执行对象的__new__方法，然后执行对象的__init__方法&lt;/p&gt;
&lt;h3 id=&#34;推荐&#34;&gt;推荐&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yangcongchufang.com/%E9%AB%98%E7%BA%A7python%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/python-object-class.html&#34;&gt;Python中的面向对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/04/functional_programming.html&#34;&gt;函数是编程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>python中特殊方法和特殊变量总结</title>
      <link>https://blog.gourds.site/post/programming/python%E4%B8%AD%E7%89%B9%E6%AE%8A%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 01 Sep 2019 10:59:29 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/programming/python%E4%B8%AD%E7%89%B9%E6%AE%8A%E6%96%B9%E6%B3%95%E5%92%8C%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F%E6%80%BB%E7%BB%93/</guid>
      
        <description>&lt;p&gt;在研究一些python项目的源码时经常会看到一些特殊的方法和变量，比如两边双下划线&lt;code&gt;__init__&lt;/code&gt;定义的方法，还有一些类中会有以双下划线&lt;code&gt;__&lt;/code&gt;开头定义的变量，以及以单下划线&lt;code&gt;_&lt;/code&gt;开头的定义的变量。这里对目前经常遇到的做一个记录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;__method__&lt;/code&gt;:在class中有一些以双下划线开头和结尾的函数被称为特殊方法(Magic Method)，更具体可以参考&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt; 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;顺便说一下访问限制。如下（限制其实并不严格，主要靠自觉）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;__&lt;/code&gt;:在类内部如果使用双下划线开头定义变量，那么这个变量就变成了私有变量（private），即这个变量只有在内部访问（并不是绝对控制，可以通过其他方法访问）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_&lt;/code&gt;:在类内部如果使用_开头定义变量，其实表示建议（表示可以从外部访问但最好不要访问）当成私有变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;特殊方法magic-method&#34;&gt;特殊方法(Magic Method)&lt;/h3&gt;
&lt;p&gt;常用的内置方法简述如下&lt;/p&gt;
&lt;h4 id=&#34;object__new__cls-&#34;&gt;&lt;code&gt;object.__new__(cls[, ...])&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__new__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__new__&lt;/code&gt;是一个静态方法用于创建对象并返回对象，当返回对象时会自动调用&lt;code&gt;__init__&lt;/code&gt;进行初始化。第一个参数是cls表示对象本身，其实self就是&lt;code&gt;__new__&lt;/code&gt;方法的返回值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__init__self-&#34;&gt;&lt;code&gt;object.__init__(self[, ...])&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__init__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创建实例后由&lt;code&gt;__new__()&lt;/code&gt;调用，但在返回给调用方之前调用。用于初始化实例，其中self表示实例本身&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__str__self&#34;&gt;&lt;code&gt;object.__str__(self)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__str__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当使用内置函数print()或format()时被调用，返回值只能是str.&lt;code&gt;__str__&lt;/code&gt; 方法默认调用了 &lt;code&gt;__repr__&lt;/code&gt;方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__dir__self&#34;&gt;&lt;code&gt;object.__dir__(self)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__dir__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用于列出该对象内部的所有属性（包括方法）名，该方法将会返回包含所有属性（方法）名的序列。被dir(object)调用，调用会将序列返回为一个经过排序的列表&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__call__self-args&#34;&gt;&lt;code&gt;object.__call__(self[, args...])&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#emulating-callable-objects&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将一个类实例要变成一个可调用对象，当实例被调用时触发。x() = &lt;code&gt;x.__call__() &lt;/code&gt;
例子：flask源码请求入口、django源码请求入口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__repr__self&#34;&gt;&lt;code&gt;object.__repr__(self)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__repr__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;跟&lt;code&gt;__str__&lt;/code&gt;方法类似&lt;code&gt;__repr__&lt;/code&gt;它们都是一个“自我描述”的方法，不过repr偏向于程序员调试(应该更多的表示出一个对象来源的类以及继承关系)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__setattr__self-name-value&#34;&gt;&lt;code&gt;object.__setattr__(self, name, value)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__setattr__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;试图分配属性时调用。这被调用而不是正常机制(即，将值存储在实例字典中)。name是属性名，value是要分配给它的值。app.abc = &amp;lsquo;mvalue&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__getattr__self-name&#34;&gt;&lt;code&gt;object.__getattr__(self, name)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getattr__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果name被访问，同时它不存在的时候，此方法被调用。app.abc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;object__delattr__self-name&#34;&gt;&lt;code&gt;object.__delattr__(self, name)&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__delattr__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果要删除name，这个方法就被调用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;__setitem__&#34;&gt;&lt;code&gt;__setitem__&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__setitem__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置给定键的值。app[&amp;lsquo;abc&amp;rsquo;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;__getitem__&#34;&gt;&lt;code&gt;__getitem__&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getitem__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;返回键对应的值。app[&amp;lsquo;abc&amp;rsquo;] = &amp;lsquo;mvalue&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;__delitem__&#34;&gt;&lt;code&gt;__delitem__&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__delitem__&#34;&gt;Python3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;删除给定键对应的元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;特殊属性&#34;&gt;特殊属性&lt;/h3&gt;
&lt;h4 id=&#34;__name__&#34;&gt;&lt;code&gt;__name__&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;如果当前程序运行在当前模块中，那么&lt;code&gt;__name__&lt;/code&gt;就是&lt;code&gt;__main__&lt;/code&gt;,如果是被调用，这个模块中的&lt;code&gt;__name__&lt;/code&gt;就是模块名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;gourds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Py name is &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;gourds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#文件file1一内直接执行 结果是Py name is __main__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;file1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;file1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gourds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#调用执行，结果是Py name is file1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;__all__&#34;&gt;&lt;code&gt;__all__&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;如果一个模块定义了&lt;code&gt;__all__&lt;/code&gt;属性,则当被导入时，只有&lt;code&gt;__all__&lt;/code&gt;内指定的属性、方法、类可被导入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;__all__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cls_test_1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;fun_test_2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;cls_test_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cls_test_1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;cls_test_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cls_test_2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun_test_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fun_test_1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun_test_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fun_test_2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如上，如果通过from调用上面的模块，则只有&lt;code&gt;__all__&lt;/code&gt;里面定义的方法和类可以使用。如果使用其他未允许的，就会触发&lt;code&gt;NameError: name &#39;xxx&#39; is not defined&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;__slots__&#34;&gt;&lt;code&gt;__slots__&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;跟&lt;code&gt;__all__&lt;/code&gt;不同，&lt;code&gt;__slots__&lt;/code&gt;可以用来限制类中实例的属性（这个限制只能限制当前类的实例，对子类没有影响）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;test_slots&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;vm&#34;&gt;__slots__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ta&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;tb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_slots&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;mta&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tb&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;mtb&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果视图设置不被允许的属性如&lt;code&gt;x.tc&lt;/code&gt;,就会抛出&lt;code&gt;AttributeError: &#39;test_slots&#39; object has no attribute &#39;tc&#39;&lt;/code&gt;,这个在Flask源码中的local对象有使用&lt;/p&gt;
&lt;h4 id=&#34;__mro__&#34;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Python中每一个有父类的类都有这个属性，值是一个tuble。表示方法解析时的对象查找顺序: 越靠前的优先级越高&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;gourds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gourds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__mro__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#(&amp;lt;class &amp;#39;__main__.gourds&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;扩展问题&#34;&gt;扩展问题&lt;/h3&gt;
&lt;h4 id=&#34;1-什么是方法什么是函数&#34;&gt;1. 什么是方法什么是函数&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;先扔下概念&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;function&lt;/strong&gt; —— A series of statements which returns some value toa caller. It can also be passed zero or more arguments which may beused in the execution of the body&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;method&lt;/strong&gt; —— A function which is defined inside a class body. Ifcalled as an attribute of an instance of that class, the methodwill get the instance object as its first argument (which isusually called self)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;函数是Python中的可调用对象，即可以使用call运算符调用&lt;/li&gt;
&lt;li&gt;方法是类中的函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-函数调用时加括号和不加括号的区别&#34;&gt;2. 函数调用时加括号和不加括号的区别&lt;/h4&gt;
&lt;p&gt;不加括号表示调用函数本身，加括号就表示调用函数执行结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#&amp;lt;function foo at 0x101fcee18&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;3-super函数和mro方法的区别&#34;&gt;3. super函数和mro方法的区别&lt;/h4&gt;
&lt;p&gt;super原理：通过mro()方法获取到实例的方法解析顺序，在mro顺序中返回当前类的下一个类&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体可以参考&lt;a href=&#34;http://py.defcoding.com/chapter-3/mro.html&#34;&gt;MRO 和 super&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
    </item>
    
    <item>
      <title>JenkinsActiveChoices插件使用</title>
      <link>https://blog.gourds.site/post/cicd/jenkins%E7%9A%84activechoices%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 30 Aug 2019 08:30:00 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/cicd/jenkins%E7%9A%84activechoices%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</guid>
      
        <description>&lt;p&gt;之前使用过Jenkins的&lt;a href=&#34;https://wiki.jenkins.io/display/JENKINS/Active+Choices+Plugin&#34;&gt;Active Choices Plugin&lt;/a&gt;插件，概述下当时我想实现的效果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对自定义选项支持多选&lt;/li&gt;
&lt;li&gt;在Job中点击构建是默认全部选中&lt;/li&gt;
&lt;li&gt;采用DSL构建
所以当时调研后就选择了这个插件，使用起来还不错。不过今天又遇到一个问题，记录一下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现效果如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://img.arvon.top:80/images/2019/08/30/20190830-jenkins-1.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jenkins上&lt;code&gt;Test_Choices1&lt;/code&gt;的配置如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://img.arvon.top:80/images/2019/08/30/20190830-jenkins-2.jpg&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Test_choices2&lt;/code&gt;跟1的区别在于点击进去默认是全选的，关于选中状态，主要区别是&lt;code&gt;:selected&lt;/code&gt;,具体可以参照上面插件的wiki链接。
wiki2就写一个Groovy的写法不截图了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;activeChoiceParam(&amp;#39;Test_choices2&amp;#39;) {
    description(&amp;#39;描述&amp;#39;)
    //filterable()
    choiceType(&amp;#39;MULTI_SELECT&amp;#39;)
    groovyScript {
        script(&amp;#39;&amp;#39;&amp;#39;\
        return [
                &amp;#39;C1&amp;#39;,
                &amp;#39;C2&amp;#39;,
                &amp;#39;C3&amp;#39;,
                &amp;#39;C4&amp;#39;,
                &amp;#39;C5&amp;#39;
               ].collect { &amp;#34;$it:selected&amp;#34; }
            &amp;#39;&amp;#39;&amp;#39;.stripIndent())
        //fallbackScript(&amp;#39;&amp;#34;fallback choice&amp;#34;&amp;#39;)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样需求就解决了，最近发现的问题是如果使用cron触发任务，默认选择的就不生效了。目前是个ISSUE，具体信息可以追踪&lt;a href=&#34;https://issues.jenkins-ci.org/browse/JENKINS-42568&#34;&gt; JENKINS-42568&lt;/a&gt;
有好的解决方案再来这更新，不赘述了&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Flask中Jinja2模板使用总结</title>
      <link>https://blog.gourds.site/post/programming/flask%E4%B8%ADjinja2%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 28 Aug 2019 21:00:00 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/programming/flask%E4%B8%ADjinja2%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      
        <description>&lt;p&gt;之前&lt;a href=&#34;&#34;&gt;已经总结过Jinja2&lt;/a&gt;了,这里主要总结在Falsk中的一些东西。包括以下方面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模板的目录结构设计&lt;/li&gt;
&lt;li&gt;常用的模块&lt;/li&gt;
&lt;li&gt;HTML转义&lt;/li&gt;
&lt;li&gt;特殊装饰器&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;模板的目录设计&#34;&gt;模板的目录设计&lt;/h4&gt;
&lt;p&gt;没有绝对答案，从别人博客复制一个结构又加了一点补充，更详尽的可以参考&lt;a href=&#34;https://blog.csdn.net/xingyunLOST/article/details/77155584&#34;&gt;他的博客&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;| - projectName
	| - app  //程序包
		| - templates //jinjia2模板
      | -  layout.html
      | -  index.html
      | -  about.html
      | -  profile/
           | -  layout.html
           | -  index.html
      | -  photos.html
      |-   admin/
           | - layout.html
           | - index.html
           | - analytics.html
		|- static //css,js 图片等静态文件
		| - main  //py程序包 ，可以有多个这种包，每个对应不同的功能
			| - __init__.py
			|- errors.py
			|- forms.py
			|- views.py
		|- __init__.py
		|- email.py //邮件处理程序
		|- models.py //数据库模型
	|- migrations //数据迁移文件夹
	| - tests  //单元测试
		|- __init__.py
		|- test*.py //单元测试程序，可以包含多个对应不同的功能点测试
	|- venv  //虚拟环境
	|- requirements.txt //列出了所有依赖包以及版本号，方便在其他位置生成相同的虚拟环境以及依赖
	|- config.py //全局配置文件，配置全局变量
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;常用的模块&#34;&gt;常用的模块&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;render_template&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/about&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;about&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render_template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;about.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Gourds&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  render_template参数说明：
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  第一个参数是模板名称，默认会在当前路径下的templates中查找
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  user=&amp;#39;Gourds&amp;#39;,其中左边data1表示模板中的占位符，右边表示在当前视图中的变量
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如下就是HTML的例子(定义user返回hello不然返回gun)。变量表达式使用&lt;code&gt;&amp;amp;#123;&amp;amp;#123; &amp;amp;#125;&amp;amp;#125;&lt;/code&gt;，控制语句使用&lt;code&gt;&amp;amp;#123;% %&amp;amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Gourds&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% if user is defined() %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; Hello &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt; !&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% else %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; Gun !&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endif %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;html自动转义&#34;&gt;HTML自动转义&lt;/h4&gt;
&lt;p&gt;jinja2默认情况下实惠自动转义的。如下,会被自动转义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;h1&amp;gt; Welcome &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &amp;lt;/h1&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;em&amp;gt;Gourds&amp;lt;em&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;不过有时候你可能就是想让输出这个，在Flask中可以使用&lt;code&gt;Marup&lt;/code&gt;实现&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Markup&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Markup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;h1&amp;gt; Welcome &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &amp;lt;/h1&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;em&amp;gt;Gourds&amp;lt;em&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;自动转义的原因&lt;/strong&gt;
原因：被渲染到页面的对象中没有实现&lt;code&gt;__html__&lt;/code&gt;方法的对象。换句话说,就是假设一个对象实现了&lt;code&gt;__html__&lt;/code&gt;方法那么这个对象就是安全的,jinja2模板就不会将它转义,即使他就是个恶意的脚本，那么为了防止被恶意脚本攻击,jinja2模板默认开启了自动转义,频繁的自动转义是会大量的消耗资源的,所以在确定该数据是安全的情况下可以用过滤器&lt;code&gt;|safe&lt;/code&gt;或者&lt;code&gt;&amp;amp;#123;% autoescape false %&amp;amp;#125;&amp;amp;#123;% endautoescape %&amp;amp;#125;&lt;/code&gt;关闭转义环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;safe过滤器：
过滤器safe在源码中是将对象转换成一个&lt;code&gt;Mark_up&lt;/code&gt;类的对象并实现了&lt;code&gt;__html__&lt;/code&gt;方法，所以数据对象就被标记为安全然后渲染到前端&lt;/li&gt;
&lt;li&gt;autoescape：
将对象处于一个没有转义的环境下直接渲染到前端，跟&lt;code&gt;__html__&lt;/code&gt;没有关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;模板继承include宏&#34;&gt;模板继承&amp;amp;include&amp;amp;宏&lt;/h4&gt;
&lt;p&gt;之前在jinja语法中写过了，在这就简单记下&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模板继承&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; extends &amp;#34;layout.html&amp;#34; &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; block content &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; var1 &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; fun(a,b)&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; endblock &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;include模板&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;包含的模板会被传递到当前的上下文，使用&lt;code&gt;import&lt;/code&gt;的话就不会。导入不会像包含被缓存，因为导入经常只作为容纳宏的模块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% include &amp;#39;header.html&amp;#39; without context %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;宏&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;宏其实就类似程序中的function，用来替代重复性操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 定义 --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% macro input(name, value=&amp;#39;&amp;#39;, type=&amp;#39;text&amp;#39;, size=20) -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; type &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; name &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        value|e &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; size &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endmacro %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 使用 --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input(&amp;#39;username&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input(&amp;#39;password&amp;#39;, type=&amp;#39;password&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;两个特殊装饰器&#34;&gt;两个特殊装饰器&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@app.template_globle&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个装饰器可以使所有的模板都可以直接调用被装饰的函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;template_global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; hi(&amp;#39;hello&amp;#39;, &amp;#39;world&amp;#39;)&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;@app.template_filter&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个装饰器下的函数可以方便测试表达式,比如IF判断&lt;code&gt;&amp;amp;#123;&amp;amp;#123; if a|fun(b,c) &amp;amp;#125;&amp;amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;template_filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; 1|hello(2, 3) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Jinja2语法</title>
      <link>https://blog.gourds.site/post/cicd/jinja2%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 25 Aug 2019 21:00:00 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/cicd/jinja2%E8%AF%AD%E6%B3%95/</guid>
      
        <description>&lt;h4 id=&#34;介绍&#34;&gt;介绍&lt;/h4&gt;
&lt;p&gt;大概介绍一下，主要介绍模板（模板仅仅是文本文件。它可以生成任何基于文本的格式（HTML、XML、CSV、LaTex 等等）。它并没有特定的扩展名，&lt;code&gt;.html&lt;/code&gt;或&lt;code&gt;.xml&lt;/code&gt;都是可以的。）模板包含变量或表达式 ，这两者在模板求值的时候会被替换为值。模板中 还有标签，控制模板的逻辑。模板语法的大量灵感来自于 Django和Python。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jinja2是一个现代的，设计者友好的，仿照Django模板的Python模板语言。它速度快，被广泛使用，并且提供了可选的沙箱模板执行环境保证安全.特征如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;沙箱中执行&lt;/li&gt;
&lt;li&gt;强大的HTML自动转义系统保护系统免受XSS&lt;/li&gt;
&lt;li&gt;模板继承&lt;/li&gt;
&lt;li&gt;及时编译最优的python代码&lt;/li&gt;
&lt;li&gt;易于调试。异常的行数直接指向模板中的对应行&lt;/li&gt;
&lt;li&gt;可配置的语法&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;mdash;选自 &lt;a href=&#34;http://docs.jinkan.org/docs/jinja2/index.html&#34;&gt;http://docs.jinkan.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Jinja2需要至少Python2.4版本来运行&lt;/li&gt;
&lt;li&gt;使用的时候推荐&lt;code&gt;# -*- coding: utf-8 -*-&lt;/code&gt;。
Jinja2内部使用Unicode ，这意味着你需要向渲染函数传递 Unicode 对象或只包含 ASCII 字符的字符串。此外，换行符按照默认 UNIX 风格规定行序列结束（ \n ）&lt;/li&gt;
&lt;li&gt;从Jinja2 2.4版本开始支持自动转义(autoescape参数)。&lt;a href=&#34;http://docs.jinkan.org/docs/jinja2/extensions.html#autoescape-extension&#34;&gt;自动转义&lt;/a&gt;扩展允许你在模板内开关自动转义特性。如果环境的 autoescape 设定为 False ，它可以被激活。如果是 True 可以被关闭。这个设定的覆盖是有作用域的。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;mdash;选自 &lt;a href=&#34;https://www.w3cschool.cn/yshfid/&#34;&gt;W3Cschool Jinja2文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;模板变量-及-过滤器&#34;&gt;模板（变量 及 过滤器）&lt;/h3&gt;
&lt;h4 id=&#34;变量&#34;&gt;变量&lt;/h4&gt;
&lt;p&gt;变量可以有两种形式，但实际不太一样，另外注意&lt;code&gt;&amp;amp;#123;&amp;amp;#123; &amp;amp;#125;&amp;amp;#125;&lt;/code&gt;不是变量的一部分，而是打印语句的一部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;#123;&amp;amp;#123; foo.bar &amp;amp;#125;&amp;amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用foo.bar实际在python层面做了以下事情&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查foo上是否有一个名为bar的属性&lt;/li&gt;
&lt;li&gt;若没有，检查foo中是否有一个bar的项&lt;/li&gt;
&lt;li&gt;若没有，返回一个未定义的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;#123;&amp;amp;#123; foo[&#39;bar&#39;] &amp;amp;#125;&amp;amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;-使用foo[&amp;lsquo;bar&amp;rsquo;]如下
-检查foo中是否有一个名为bar的项
-若没有，检查foo中是否有一个名为bar的属性
-若没有，返回一个未定义的对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;变量赋值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% set navigation = [(&amp;#39;index.html&amp;#39;, &amp;#39;Index&amp;#39;), (&amp;#39;about.html&amp;#39;, &amp;#39;About&amp;#39;)] %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% set key, value = call_something() %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;过滤器&#34;&gt;过滤器&lt;/h4&gt;
&lt;p&gt;变量可以通过过滤器修改。过滤器与变量用管道符&lt;code&gt;|&lt;/code&gt;分割，并且也可以用圆括号传递可选参数。多个过滤器可以链式调用
常见的内置过滤器如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#取绝对值&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#获得对象属性&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;batch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linecount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fill_with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#批处理项目的过滤器，类似切片&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;capitalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将第一个字母大写其余小写&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将值的宽度增加到指定值&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default_value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#如果值未定义就设置为默认值，如果要对布尔值使用boolean参数需要为True&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dictsort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;case_sensitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#对字典进行排序&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;escape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将字符串中的字符&amp;amp;、&amp;#39;、和&amp;#39;转换为安全的序列。如果您需要在HTML中显示可能包含此类字符的文本，请使用此选项。将返回值标记为标记字符串。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;filesizeformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将文件大小格式转化为便于阅读的格式,如MB，G&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回序列中的第一个，字符串列表都可以，字符串如果包括,会以,分割，列表直接拿第一项&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将输入转换成浮点数，转换失败就返回默认值&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;forceescape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#强制HTML转义。这可能会使转义变量翻倍&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#给对象应用python字符串格式，如value=&amp;#34;%s - %s&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#使用公共属性将对象序列分组&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;indent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;indentfirst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回传递字符串的副本，每行缩进4个空格。第一行没有缩进。如果您想更改空格数或缩进第一行，可以向筛选器传递其他参数&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将输入转换成整数，转换失败就返回默认值&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将列表拼接，也可以连接对象的某些属性&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回序列中的最后一个&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回序列或映射的项数，最简单可以看str的长度，已经列表的元素数&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将值转化为列表&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将值转化为小写&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#映射属性，对对象序列应用过滤器或查找属性，如&amp;amp;#123;&amp;amp;#123; titles|map(&amp;#39;lower&amp;#39;)|join(&amp;#39;, &amp;#39;) &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#方便调试，美观的打印&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#从序列中返回随机项目&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;reject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#通过将测试应用于对象或属性，并在测试成功后拒绝这些对象来过滤对象序列。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;rejectattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#通过将测试应用于对象或属性，并在测试成功后拒绝这些对象来过滤对象序列。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;old&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#查找替换&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#反转对象&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;precision&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;common&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将数字舍入到给定的精度。第一个参数指定精度(默认值为0)，第二个参数指定舍入方法&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;safe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将该值标记为安全，这意味着在启用自动转义的环境中，该变量不会被转义。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#通过将测试应用于对象或属性，并仅选择测试成功的对象，过滤对象序列。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;selectattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#通过将测试应用于对象或属性，并仅选择测试成功的对象，过滤对象序列。&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;slices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fill_with&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#分割迭代器并返回包含这些项目的列表。当创建包含三个表示列的ul标记的div时很有用&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;case_sensitive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#排序&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#创建字符串unicode&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;striptags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#去掉SGML/XML标签，用一个空格替换相邻的空格。&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回数字的和，如&amp;amp;#123;&amp;amp;#123; items|sum(attribute=&amp;#39;price&amp;#39;) &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回该值的标题大小写版本。即单词将以大写字母开头，所有剩余字符都是小写的&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#去掉开头和结尾的空格&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;truncate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;killwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#截断字符串指定长度&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将值转为大写&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;urlencode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#用于网址的转义字符串(使用UTF-8编码)。既接受字典和常规字符串也接受成对的iterables。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;urlize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trim_url_limit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nofollow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将纯文本网址转换为可点击&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wordcount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回字符串中的单词数&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wordwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;79&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;break_long_words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wrapstring&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回传递给筛选器的字符串的副本，该字符串在指定个字符后换行&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;xmlattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;autospace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#基于字典中的项目创建一个SGML/XML属性字符串。所有既不是无也不是未定义的值都会自动转义&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;过滤器小栗子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% filter upper %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    This text becomes uppercase
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endfilter %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;基础语法&#34;&gt;基础语法&lt;/h3&gt;
&lt;h4 id=&#34;测试&#34;&gt;测试&lt;/h4&gt;
&lt;p&gt;测试可以对普通表达式进行测试变量,测试也可以接受参数。如果测试只接受一个参数，你可以省去括号来分组它们&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% if loop.index is divisibleby(3) %&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;内置测试清单&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;callable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#对象是否可调用&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;defined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#是否定义&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;divisibleby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#能否被整除&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;escaped&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#是否转义&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;even&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#如果是偶数为true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#是否有可迭代对象&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#小写返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#字典返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#空返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#数字返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#变量为奇数返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sameas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;other&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#是否指向相同的内存地址&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#列表返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#字符串返回true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#是否未定义&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#大写返回true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;注释空白控制转义&#34;&gt;注释&amp;amp;空白控制&amp;amp;转义&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;注释：&lt;/strong&gt; 在模板内进行注释使用&lt;code&gt;&amp;amp;#123;# 要注释的内容 #&amp;amp;#125;&lt;/code&gt;,如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;# note: disabled template example&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% for user in users %&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% endfor %&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;空白控制&lt;/strong&gt; :默认情况下，模板引擎不会对空白进行修改，如果配置了Jinja的&lt;code&gt;trim_blocks&lt;/code&gt;则模板标签后的第一个换行符会被移除，另外，可以通过在块的开始或结束放置一个减号&lt;code&gt;-&lt;/code&gt;
&lt;strong&gt;注意&lt;/strong&gt;:标签和减号之间不能有空格,可以移除块前或块后的空白.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#demo1: 生成不换行的所有元素&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% for item in seq -%&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;&amp;amp;#123; item &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;%- endfor %&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#demo2&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;%- if foo -%&amp;amp;#125;...&amp;amp;#123;% endif %&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;**转义：**较短的转义可以使用变量表达式，较长的内容或段落可以通过&lt;code&gt;raw&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#demo1&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;&amp;amp;#123; &amp;#39;&amp;amp;#123;&amp;#39; &amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#demo2&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% raw %&amp;amp;#125;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% for i in [1,2,3] %&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;&amp;amp;#123; i &amp;amp;#125;&amp;amp;#125;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% endfor %&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#123;% endraw %&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;扩展：
当从模板生成 HTML 时，始终有这样的风险:变量包含影响已生成 HTML 的字符。有两种 解决方法:手动转义每个字符或默认自动转义所有的东西。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用手动转义: 转义通过用管道传递到过滤器 |e 来实现: {{ user.username|e }} 。&lt;/li&gt;
&lt;li&gt;使用自动转义: 当启用了自动转移，默认会转移一切，除非值被显式地标记为安全的&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;行语句&#34;&gt;行语句&lt;/h4&gt;
&lt;p&gt;如果配置启用行语句，就可以把一个行标记为一个句子。例如如果行语句前缀配置为&#39;#&#39;，那么&lt;code&gt;#for item in [1,2,3]&lt;/code&gt;和&lt;code&gt;&amp;amp;#123;% for item in [1,2,3] %&amp;amp;#125;&lt;/code&gt;就是等效的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;行语句可以出现在一行的任意位置，只要它的前面没有文本，提升可读性&lt;/li&gt;
&lt;li&gt;如果有未闭合的圆括号、花括号或方括号，那么行语句可以跨越多行&lt;/li&gt;
&lt;li&gt;从Jinja2.2版本开始，行注释可以使用了，例如如果配置&lt;code&gt;##&lt;/code&gt;为行注释前缀，行中所有&lt;code&gt;##&lt;/code&gt;后面的内容都会被忽略（不包括换行符）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;模板继承包含&#34;&gt;模板继承&amp;amp;包含&lt;/h3&gt;
&lt;p&gt;模板继承可以说是Jinja最强大的部分了，模板继承允许定义一个基础模板，然后定义子模板可以覆盖的块。如下例子&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础模板&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block head %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;style.css&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block title %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt; - My Webpage&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block content %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;footer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block footer %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;ni&#34;&gt;&amp;amp;copy;&lt;/span&gt; Copyright 2008 by &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://gourds.site/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Gourds&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;.
        &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;子模板s1&lt;/strong&gt;
&lt;code&gt;&amp;amp;#123;% extends%&amp;amp;#125;&lt;/code&gt;标签确定继承的模板，也可以访问多级目录下的模板&lt;code&gt;&amp;amp;#123;% extends &amp;quot;path_to/my_template.html&amp;quot; %&amp;amp;#125;&lt;/code&gt;。使用&lt;code&gt;super()&lt;/code&gt;可以调用super来渲染父级块的内容，会返回父级块的结果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% extends &amp;#34;base.html&amp;#34; %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block title %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;Index&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block head %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; super() &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;important&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;336699&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;125&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block content %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Index Test &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;important&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
      Gourds test page s1.
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;推荐使用命名块结束标签提升可读性(&lt;code&gt;endblock&lt;/code&gt;后面写的要与&lt;code&gt;block&lt;/code&gt;后面的对应),如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block my_data %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
  &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block you_data %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    ...
  &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock you_data %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endblock my_data%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;嵌套块和作用域&lt;/strong&gt;
默认的块不允许访问块外作用域中的变量，嵌套块可以.从Jinja2.2开始，只需在块声明中添加&lt;code&gt;scoped&lt;/code&gt;装饰，就可以显示的指定在块中可用的变量，当覆盖一个块时不需要&lt;code&gt;scoped&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% for item in seq %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% block loop_item scoped %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; item &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&amp;amp;#123;&lt;/span&gt;% endblock %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;包含&lt;/strong&gt;
Include语句用于包含一个模板，并在当前命名空间返回文件的渲染结果，包含的模板默认可以访问活动的上下文中的变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% include &amp;#39;header.html&amp;#39; %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    Body
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% include &amp;#39;footer.html&amp;#39; %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;控制结构&#34;&gt;控制结构&lt;/h3&gt;
&lt;h4 id=&#34;for语句&#34;&gt;for语句&lt;/h4&gt;
&lt;p&gt;遍历列表中的每一元素，支持大部分python语法。注意不能在循环中使用&lt;code&gt;break&lt;/code&gt;或&lt;code&gt;continue&lt;/code&gt;.但可以通过过滤来跳过项目，如&lt;code&gt;&amp;amp;#123;% for user in users if not user.hidden %&amp;amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% for k,v in local_data.items() %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; v[&amp;#39;Name&amp;#39;] &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; v.Age &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; v.Site &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果因序列是空或者过滤移除了序列中的所有项目而没有执行循环，你可以使用 else 渲染一个用于替换的块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% for user in users %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user.username|e &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% else %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;no users found&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;em&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;递归的使用循环&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sitemap&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- for item in sitemap recursive %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; item.href|e &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; item.title &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- if item.children -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;submenu&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; loop(item.children) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endif %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在for循环中可用的特殊变量&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量名&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;loop.index&lt;/td&gt;
&lt;td&gt;当前迭代次数从1开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.index0&lt;/td&gt;
&lt;td&gt;当前迭代次数从0开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.revindex&lt;/td&gt;
&lt;td&gt;到循环结束需要迭代的次数从1开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.revindex0&lt;/td&gt;
&lt;td&gt;到循环结束需要迭代的次数从0开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.first&lt;/td&gt;
&lt;td&gt;如果是第一次迭代为True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.last&lt;/td&gt;
&lt;td&gt;如果是最后一次迭代为True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.length&lt;/td&gt;
&lt;td&gt;列表中的项目数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loop.cycle&lt;/td&gt;
&lt;td&gt;在表表间期取值的辅助函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;if语句&#34;&gt;if语句&lt;/h4&gt;
&lt;p&gt;跟python中的if差不多，可以使用&lt;code&gt;if、elif、else&lt;/code&gt;，可以测试变量或其他表达式，在jinja中也可以叫做内联表达式或者循环过滤&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% if users %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% for user in users %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user.username|e &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endif %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;

&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% if kenny.sick %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    Kenny is sick.
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% elif kenny.dead %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    You killed Kenny!  You bastard!!!
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% else %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    Kenny looks okay --- so far
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endif %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;关于宏&#34;&gt;关于宏&lt;/h4&gt;
&lt;p&gt;类似其他语言，宏用来将重复行为分装成可重用的函数.如果宏在不同模板定义需要先&lt;code&gt;import&lt;/code&gt;，如果一个宏的名称以下划线开始，则它不能导出且不能被导入
宏内部，可以访问的特殊的变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;varargs&lt;/code&gt;：多于宏接受的参数个数的位置参数被传入，它们会作为列表的值保存在 varargs变量上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kwargs&lt;/code&gt;：同varargs，但只针对关键字参数。所有未使用的关键字参数会存储在这个特殊变量中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caller&lt;/code&gt;：如果宏通过call标签调用，调用者会作为可调用的宏被存储在这个变量中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;：宏的名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arguments&lt;/code&gt;：一个宏接受的参数名的元组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;defaults&lt;/code&gt;：默认值的元组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;catch_kwargs&lt;/code&gt;：如果宏接受额外的关键字参数，为true&lt;/li&gt;
&lt;li&gt;&lt;code&gt;catch_varargs&lt;/code&gt;：如果宏接受额外的位置参数，为true&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caller&lt;/code&gt;：如果宏访问特殊的caller变量且由call标签调用，为true&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下例子，定义宏&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% macro input(name, value=&amp;#39;&amp;#39;, type=&amp;#39;text&amp;#39;, size=20) -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; type &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; name &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        value|e &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; size &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endmacro %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用宏&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input(&amp;#39;username&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input(&amp;#39;password&amp;#39;, type=&amp;#39;password&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;带参数调用块的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% macro dump_users(users) -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- for user in users %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user.username|e &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; caller(user) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endfor %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endmacro %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;

&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% call(user) dump_users(list_of_user) %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Realname&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user.realname|e &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Description&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; user.description &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% endcall %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;表达式&#34;&gt;表达式&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;比较&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;==&lt;/code&gt;/&lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;and/or/not&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is&lt;/code&gt;/&lt;code&gt;in&lt;/code&gt;/&lt;code&gt;|&lt;/code&gt;(应用过滤器)/&lt;code&gt;()&lt;/code&gt;调用一个可调用对象/
&lt;strong&gt;算数运算&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;典型示例&#34;&gt;典型示例&lt;/h3&gt;
&lt;p&gt;导入模板并使用模板中的宏，如下是被导入的forms.html&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% macro input(name, value=&amp;#39;&amp;#39;, type=&amp;#39;text&amp;#39;) -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; type &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; value|e &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; name &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endmacro %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;

&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- macro textarea(name, value=&amp;#39;&amp;#39;, rows=10, cols=40) -%&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; name &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; rows &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;amp;#123;&amp;amp;#123; cols
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;        &amp;amp;#125;&amp;amp;#125;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; value|e &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;%- endmacro %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以这样使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% import &amp;#39;forms.html&amp;#39; as forms %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Username&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; forms.input(&amp;#39;username&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; forms.input(&amp;#39;password&amp;#39;, type=&amp;#39;password&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; forms.textarea(&amp;#39;comment&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;还可以导入到命名空间中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&lt;/span&gt;% from &amp;#39;forms.html&amp;#39; import input as input_field, textarea %&lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Username&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input_field(&amp;#39;username&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; input_field(&amp;#39;password&amp;#39;, type=&amp;#39;password&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;&amp;amp;#123;&amp;amp;#123;&lt;/span&gt; textarea(&amp;#39;comment&amp;#39;) &lt;span class=&#34;ni&#34;&gt;&amp;amp;#125;&amp;amp;#125;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;基本是&lt;code&gt;W3Cschool&lt;/code&gt;的学习笔记，大部分是复制粘贴的，相当于读写一遍，侵删，以上&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>python中的*与**用法</title>
      <link>https://blog.gourds.site/post/programming/python%E4%B8%AD%E7%9A%84%E4%B8%8E%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 25 Aug 2019 21:00:00 +0000</pubDate>
      
      <guid>https://blog.gourds.site/post/programming/python%E4%B8%AD%E7%9A%84%E4%B8%8E%E7%94%A8%E6%B3%95/</guid>
      
        <description>&lt;p&gt;在Python中经常会见到以下一些用法，如在函数调用中&lt;code&gt;fun1(*vars)&lt;/code&gt;|&lt;code&gt;fun2(**vars)&lt;/code&gt;,以及在函数定义中如&lt;code&gt;def fun1(*param)&lt;/code&gt; or &lt;code&gt;def fun2(**param)&lt;/code&gt;这些形式。下面就针对这些情况使用具体例子进行一下说明。&lt;/p&gt;
&lt;h3 id=&#34;对于函数调用中的和&#34;&gt;对于函数调用中的&lt;code&gt;*&lt;/code&gt;和&lt;code&gt;**&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;主要功能是一个函数解压传入的过程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#demo1  * list&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;demo_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;demo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a+b+c=&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#列表前面加星号作用是将列表解开成两个独立的参数，传入函数&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;demo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;demo_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#a+b+c=6&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#demo2 ** dict&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;demo_dict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&amp;#39;k1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&amp;#39;k2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&amp;#39;k3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
             &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;demo2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#字典前面加两个星号，是将字典解开成独立的元素作为形参&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#补充：当将字典传入形参时，形参的名称要与字典的键名称相同&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;demo2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;demo_dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#{&amp;#39;v1&amp;#39;: 1} {&amp;#39;v2&amp;#39;: 2} {&amp;#39;v3&amp;#39;: 3}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;对于函数定义中的和&#34;&gt;对于函数定义中的&lt;code&gt;*&lt;/code&gt;和&lt;code&gt;**&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;主要功能是将任意个数的参数导入到python函数中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#将所以参数以元组(tuple)的形式导入&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#将参数以字典的形式导入&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo_bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#上面两个可以混合使用&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#(2, 3)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#{&amp;#39;a&amp;#39;: 2, &amp;#39;b&amp;#39;: 3}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;foo_bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#(2, 3)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#{&amp;#39;a&amp;#39;: 4, &amp;#39;b&amp;#39;: 5}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;扩展&#34;&gt;扩展&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/33896402&#34;&gt;知乎的一篇文章&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
